{"version":3,"sources":["webpack:///./src/components/ui/Subtitle.vue","webpack:///./src/components/ui/Subtitle.vue?db52","webpack:///./src/img/stop.jpeg","webpack:///./src/views/Home.vue","webpack:///./src/components/ui/SquaredImage.vue","webpack:///./src/components/ui/SquaredImage.vue?8be7","webpack:///./src/components/home/BlockLayout.vue","webpack:///./src/components/home/BlockLayout.vue?3ae0","webpack:///./src/components/home/Documents.vue","webpack:///./node_modules/photoswipe/dist/photoswipe.esm.js","webpack:///./node_modules/photoswipe/dist/photoswipe-lightbox.esm.js","webpack:///./node_modules/vue3-carousel/dist/carousel.es.js","webpack:///./src/components/ui/Skeleton.vue","webpack:///./src/components/ui/Skeleton.vue?32cf","webpack:///./src/components/home/Documents.vue?eeb3","webpack:///./src/components/home/Documents.vue?c55b","webpack:///./src/components/home/HelpSection.vue","webpack:///./src/components/home/HelpSection.vue?a04b","webpack:///./src/components/home/HelpSection.vue?2be0","webpack:///./src/views/Home.vue?c49d","webpack:///./src/views/Home.vue?7720","webpack:///./src/img/doc.jpeg"],"names":["_createElementBlock","class","_toDisplayString","$props","props","title","type","String","required","__exports__","render","module","exports","href","_createElementVNode","_ctx","_createVNode","_component_HelpSection","_component_Subtitle","_component_router_link","to","tag","_component_SquaredImage","_component_Documents","_component_BlockLayout","_component_TelegramIcon","_component_SuccessModal","ref","subtitle","_renderSlot","name","inheritAttrs","script","key","_Transition","mode","$data","_Fragment","_renderList","$options","document","index","_createBlock","_component_Skeleton","_component_Carousel","items-to-show","addons","_component_Navigation","_component_Pagination","_component_Slide","onClick","src","documentImage","url","createElement","className","tagName","appendToEl","el","appendChild","equalizePoints","p1","p2","x","y","undefined","id","roundPoint","p","Math","round","getDistanceBetween","abs","sqrt","pointsEqual","clamp","val","min","max","toTransformString","scale","propValue","setTransform","style","transform","defaultCSSEasing","setTransitionStyle","prop","duration","ease","transition","setWidthHeight","w","h","width","height","removeTransitionStyle","decodeImage","img","decode","complete","Promise","resolve","reject","onload","onerror","LOAD_STATE","IDLE","LOADING","LOADED","ERROR","specialKeyUsed","e","which","ctrlKey","metaKey","altKey","shiftKey","getElementsFromOption","option","legacySelector","parent","elements","Element","NodeList","Array","isArray","from","selector","querySelectorAll","supportsPassive","window","addEventListener","Object","defineProperty","get","DOMEvents","this","_pool","target","listener","passive","_toggleListener","forEach","poolItem","unbind","skipPool","methodName","split","eType","filter","push","eventOptions","getViewportSize","options","pswp","getViewportSizeFn","newViewportSize","documentElement","clientWidth","innerHeight","parsePaddingOption","viewportSize","itemData","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","getPanAreaSize","PanBounds","slide","currZoomLevel","center","reset","_updateAxis","dispatch","axis","elSize","paddingProp","data","panAreaSize","panOffset","MAX_IMAGE_WIDTH","ZoomLevel","maxWidth","maxHeight","elementSize","hRatio","vRatio","fit","fill","vFill","initial","_getInitial","secondary","_getSecondary","_getMax","zoomLevels","slideData","optionPrefix","optionValue","Number","_parseZoomLevelOption","Slide","isActive","currIndex","currentResolution","isFirstSlide","opener","isOpen","pan","content","contentLoader","getContentBySlide","container","bounds","prevDisplayedWidth","prevDisplayedHeight","activate","deactivate","holderElement","calculateSize","transformOrigin","load","appendHeavy","updateContentSize","innerHTML","zoomAndPanToInitial","applyCurrentZoomPan","appendHeavyNearby","heavyAppended","mainScroll","isShifted","defaultPrevented","append","hasSlide","remove","update","panTo","force","scaleMultiplier","sizeChanged","setDisplayedSize","placeholder","element","destZoomLevel","centerPoint","transitionDuration","ignoreBounds","isZoomable","animations","stopAllPan","prevZoomLevel","setZoomLevel","calculateZoomToPanOffset","finishTransition","_setResolution","startTransition","isPan","getCurrentTransform","onComplete","easing","zoomTo","zoomAnimationDuration","point","totalPanDistance","getViewportCenterPoint","zoomFactor","correctPan","panX","panY","_applyZoomTransform","currSlide","zoom","newResolution","PAN_END_FRICTION","VERTICAL_DRAG_FRICTION","MIN_RATIO_TO_CLOSE","MIN_NEXT_SLIDE_SPEED","project","initialVelocity","decelerationRate","DragHandler","gestures","startPan","stopAll","prevP1","dragAxis","closeOnVerticalDrag","isMultitouch","_setPanWithFriction","bgOpacity","_getVerticalDragRatio","applyBgOpacity","mainScrollChanged","_panOrMoveMainScroll","velocity","indexDiff","mainScrollShiftDiff","getCurrSlideX","currentSlideVisibilityRatio","moveIndexBy","correctZoomPan","_finishPanGestureForAxis","panPos","restoreBgOpacity","projectedPosition","vDragRatio","projectedVDragRatio","close","correctedPanPosition","dampingRatio","initialBgOpacity","totalPanDist","startSpring","start","end","onUpdate","pos","animationProgressRatio","floor","delta","newMainScrollX","isPannable","moveTo","newPan","allowPanToNext","currSlideMainScrollX","isLeftToRight","isRightToLeft","wasAtMinPanPosition","wasAtMaxPanPosition","potentialPan","customFriction","correctedPan","UPPER_ZOOM_FRICTION","LOWER_ZOOM_FRICTION","getZoomPointsCenter","ZoomHandler","_startPan","_startZoomPoint","_zoomPoint","_startZoomLevel","_wasOverFitZoomLevel","startP1","startP2","minZoomLevel","maxZoomLevel","pinchToClose","_calculatePanForZoomLevel","ignoreGesture","destinationZoomLevel","currZoomLevelNeedsChange","initialPan","destinationPan","panNeedsChange","naturalFrequency","now","newZoomLevel","didTapOnMainContent","event","closest","TapHandler","originalEvent","targetClassList","classList","isImageClick","contains","isBackgroundClick","_doClickOrTapAction","actionName","toggleZoom","clickToCloseNonZoomable","toggle","call","AXIS_SWIPE_HYSTERISIS","DOUBLE_TAP_DELAY","MIN_TAP_DISTANCE","Gestures","prevP2","_lastStartP1","_intervalP1","_numActivePoints","_ongoingPointers","_touchEventEnabled","_pointerEventEnabled","supportsTouch","navigator","maxTouchPoints","drag","tapHandler","on","events","add","scrollWrap","_onClick","_bindEvents","ontouchmove","ontouchend","pref","down","up","cancel","cancelEvent","onPointerDown","bind","onPointerMove","onPointerUp","isMousePointer","pointerType","button","mouseDetected","_preventPointerEventBehaviour","_updatePoints","pointerDown","_clearTapTimer","preventDefault","isDragging","isZooming","_finishDrag","_updateStartPoints","_rafStopLoop","_rafRenderLoop","_calculateDragDirection","_intervalTime","Date","_velocityCalculated","_updateVelocity","_finishTap","change","_updatePrevPoints","raf","requestAnimationFrame","time","_getVelocity","indexOf","click","tapDelay","doubleTapAction","_tapTimer","doubleTap","setTimeout","tap","clearTimeout","displacement","cancelAnimationFrame","pointerIndex","findIndex","ongoingPoiner","pointerId","splice","_convertEventPosToPoint","length","touches","diff","axisToCheck","pageX","offset","pageY","identifier","stopPropagation","MAIN_SCROLL_END_FRICTION","MainScroll","resetPosition","resizeSlides","newSlideWidth","spacing","slideWidthChanged","slideWidth","itemHolders","itemHolder","_containerShiftIndex","resize","_currPositionIndex","_prevPositionIndex","i","display","getNumItems","animate","velocityX","newIndex","potentialIndex","numSlides","canLoop","getLoopedIndex","distance","stopMainScroll","destinationX","isMainScroll","updateCurrItem","currDiff","currDistance","positionDifference","tempHolder","diffAbs","shift","setContent","pop","unshift","setIsActive","updateLazy","dragging","newSlideIndexOffset","Keyboard","initialPointerPos","_focusRoot","_onFocusIn","_onKeyDown","lastActiveElement","activeElement","returnFocus","_wasFocused","focus","keydownAction","isForward","keyCode","escKey","arrowKeys","template","DEFAULT_EASING","CSSAnimation","_target","_onComplete","_onTransitionEnd","_firstFrameTimeout","_finalizeAnimation","_finished","onFinish","removeEventListener","DEFAULT_NATURAL_FREQUENCY","DEFAULT_DAMPING_RATIO","SpringEaser","_dampingRatio","_naturalFrequency","_dampedFrequency","deltaPosition","deltaTime","coeff","naturalDumpingPow","E","dumpedFCos","cos","dumpedFSin","sin","SpringAnimation","easer","prevTime","_onFinish","animationLoop","_raf","easeFrame","Animations","activeAnimations","_start","isSpring","animation","stop","destroy","some","ScrollWheel","_onWheel","deltaX","deltaY","wheelToZoom","deltaMode","clientX","clientY","addElementHTML","htmlData","isCustomSVG","svgData","out","join","size","outlineID","inner","UIElement","elementHTML","html","isButton","toLowerCase","onInit","onclick","appendTo","topBar","initArrowButton","isNextButton","loop","disabled","arrowPrev","order","arrowNext","closeButton","zoomButton","loadingIndicator","indicatorElement","isVisible","delayTimeout","toggleIndicatorClass","setIndicatorVisibility","visible","updatePreloaderVisibility","isLoading","preloaderDelay","ui","counterIndicator","counterElement","innerText","indexIndicatorSep","setZoomedIn","isZoomedIn","UI","isRegistered","uiElementsData","sort","a","b","items","uiElementData","registerElement","_onZoomPanUpdate","elementData","isClosing","_lastUpdatedZoomLevel","currZoomLevelDiff","secondaryIsHigher","imageClickAction","getBoundsByElement","thumbAreaRect","getBoundingClientRect","left","top","getCroppedBoundsByElement","imageWidth","imageHeight","fillZoomLevel","offsetX","offsetY","innerRect","getThumbBounds","instance","thumbBounds","thumbnail","thumbSelector","matches","querySelector","applyFilters","thumbCropped","PhotoSwipeEvent","details","assign","Eventable","_listeners","_filters","fn","priority","f1","f2","addFilter","removeFilter","args","apply","off","Placeholder","imageSrc","decoding","alt","setAttribute","parentNode","Content","isAttached","state","keepPlaceholder","isLazy","reload","usePlaceholder","placeholderSrc","msrc","isImageContent","loadImage","srcset","onLoaded","onError","displayError","isError","image","dataset","largestUsedSize","sizes","errorMsgEl","errorMsg","removePlaceholder","isDecoding","then","appendImage","catch","PhotoSwipeBase","numItems","dataSource","gallery","_getGalleryDOMElements","dataSourceItem","_domElementToItemData","galleryElement","children","childSelector","linkEl","pswpSrc","pswpSrcset","parseInt","pswpWidth","pswpHeight","pswpType","thumbnailEl","currentSrc","getAttribute","pswpCropped","cropped","MIN_OPACITY","Opener","isClosed","_prepareOpen","isOpening","_duration","hideAnimationDuration","maxWidthToAnimate","_applyStartProps","_croppedZoom","showAnimationDuration","showHideAnimationType","showHideOpacity","_thumbBounds","_initialThumbBounds","_placeholder","getPlaceholderElement","_useAnimation","_animateZoom","Boolean","_animateRootOpacity","_animateBgOpacity","_opacityElement","bg","opacity","_cropContainer1","_cropContainer2","overflow","_setClosedStateZoomPan","willChange","decoded","isDelaying","finally","_initiate","setProperty","_animateToOpenState","_animateToClosedState","_onAnimationComplete","_animateTo","containerOnePanX","containerOnePanY","containerTwoPanX","containerTwoPanY","animProps","MIN_SLIDES_TO_CACHE","lazyLoadData","createContentFromData","lazyLoad","zoomLevel","ceil","lazyLoadSlide","getItemData","ContentLoader","limit","preload","_cachedItems","loadSlideByIndex","getContentByIndex","addToCache","setSlide","removeByIndex","indexToRemove","item","removedItem","find","defaultOptions","bgClickAction","tapAction","PhotoSwipe","super","_prepareOptions","_prevViewportSize","keyboard","isDestroying","_createMainStructure","rootClasses","mainClass","scrollWheel","isNaN","updateSize","pageYOffset","_initialItemData","_handlePageResize","_updatePageScrollOffset","open","goTo","removeAll","listeners","slideIndex","potentialHolderIndex","holder","hasMouse","matchMedia","test","userAgent","setScrollOffset","appendHolders","init","body","isClass","toString","PhotoSwipeLightbox","_uid","onThumbnailsClick","gallerySelector","onLine","initialPoint","clickedIndex","getClickedIndex","currentTarget","loadAndOpen","getClickedIndexFn","clickedTarget","childElements","clickedChildIndex","child","shouldOpen","promiseArray","pswpModuleType","pswpModule","Error","openPromise","preloadFirstSlide","_preloadedContent","uid","all","iterableModules","mainModule","_openPhotoswipe","default","keys","defaultConfigs","itemsToShow","itemsToScroll","modelValue","autoplay","snapAlign","wrapAround","pauseAutoplayOnHover","mouseDrag","touchDrag","dir","breakpoints","debounce","delay","timerId","throttle","inThrottle","self","getSlidesVNodes","vNode","_a","_b","_c","getMaxSlideIndex","config","slidesCount","getMinSlideIndex","getCurrentSlideIndex","getSlidesToScroll","slidesBuffer","currentSlide","output","Carousel","value","includes","settings","slots","emit","expose","root","slides","autoplayTimer","transitionTimer","__defaultConfig","currentSlideIndex","prevSlideIndex","middleSlideIndex","maxSlideIndex","minSlideIndex","initDefaultConfigs","mergedConfigs","bindConfigs","updateBreakpointsConfigs","breakpointsArray","map","newConfig","breakpoint","isMatched","handleWindowResize","updateSlidesData","updateSlideWidth","rect","updateSlidesBuffer","slidesArray","shouldShiftSlides","buffer","shifts","initializeAutoplay","resetAutoplayTimer","isTouch","startPosition","endPosition","dragged","isHover","handleMouseEnter","handleMouseLeave","handleDrag","handleDragStart","isSliding","handleDragEnd","direction","tolerance","sign","draggedSlides","newSlide","slideTo","setInterval","next","restart","clearInterval","mute","lastSlideIndex","nextSlide","prev","prevSlide","nav","slidesToScroll","trackStyle","xScroll","initCarousel","restartCarousel","updateCarousel","values","needToUpdate","currentSlideUpdated","maxSlide","minSlide","middleSlide","slotSlides","slotAddons","slotsProps","slidesElements","addonsElements","trackEl","onMousedown","onTouchstart","viewPortEl","carousel","onMouseenter","onMouseleave","icons","arrowUp","arrowDown","arrowRight","arrowLeft","Icon","iconName","path","pathEl","d","iconTitle","titleEl","viewBox","role","ariaLabel","Navigation","attrs","slotNext","slotPrev","isRTL","prevButton","nextButton","wrapOrder","updateOrder","slideStyle","current","isPrev","isNext","carousel__slide","Pagination","handleButtonClick","slideNumber","components","Subtitle","BlockLayout","Skeleton","docImg","DocImg","lightbox","documents","isMobile","innerWidth","computed","showSlider","mounted","fetchDocuments","unmounted","methods","initSwiper","images","doc","ApiCall","getDocuments","allDocuments","console","error","openImage","Component","__i18n","ctx","normalize","_normalize","_component_BtnPrimary","BtnPrimary","showGetHelpModal","emitter","HelpSection","Documents","TelegramIcon","SquaredImage","stopWarImg"],"mappings":"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","file":"js/chunk-d190fc8e.80592b25.js","sourcesContent":["<template>\n  <h3\n    class=\"text-primary text-xl font-bold sm:text-4xl\"\n    v-text=\"title\"\n  />\n</template>\n\n<script>\nexport default {\n  props: {\n    title: {\n      type: String,\n      required: true\n    }\n  }\n};\n</script>\n\n","import { render } from \"./Subtitle.vue?vue&type=template&id=2370da12\"\nimport script from \"./Subtitle.vue?vue&type=script&lang=js\"\nexport * from \"./Subtitle.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Applications/MAMP/htdocs/for_life/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","module.exports = __webpack_public_path__ + \"img/stop.5c74dcb6.jpeg\";","<template>\n  <div>\n    <section>\n      <div class=\"bg-stop-war-mob text-primary lg:text-white h-[250px] sm:h-[540px] bg-center lg:rounded-b-lg -mx-5 md:-mx-10 lg:mx-0 lg:bg-stop-war px-3 sm:px-10 py-3 sm:py-6 text-white bg-cover  flex flex-col justify-end\">\n        <p\n          class=\"text-xl sm:text-3xl md:text-5xl font-bold mb-2 sm:mb-3\"\n          v-text=\"$t('volunteer_team')\"\n        />\n\n        <p\n          class=\"text-sm sm:text-base md:text-lg font-bold\"\n          v-text=\"$t('main_text')\"\n        />\n      </div>\n    </section>\n \n    <HelpSection class=\"mt-8\" />\n\n    <Subtitle\n      class=\"my-8\"\n      :title=\"$t('programs')\"\n    />\n\n    <div class=\"flex gap-5 text-white\">\n      <router-link\n        :to=\"{\n          name: 'Programs'\n        }\"\n        tag=\"div\"\n        class=\"flex items-end rounded-md overflow-hidden w-full hover:scale-90 transition-transform duration-300\"\n      >\n        <SquaredImage\n          class=\"flex items-end bg-[url('./img/programe_1.jpeg')]\"\n        >\n          <p\n            class=\"p-3 sm:p-10 font-bold text-lg sm:text-4xl\"\n            v-text=\"$t('military_help')\"\n          />\n        </SquaredImage>\n      </router-link>\n\n      <router-link\n        :to=\"{\n          name: 'Programs'\n        }\"\n        tag=\"div\"\n        class=\"flex items-end rounded-md overflow-hidden w-full hover:scale-90 transition-transform duration-300\"\n      >\n        <SquaredImage\n          class=\"flex items-end bg-[url('./img/programe_2.jpeg')]\"\n        >\n          <p\n            class=\"p-3 sm:p-10 font-bold text-lg sm:text-4xl\"\n            v-text=\"$t('help')\"\n          />\n        </SquaredImage>\n      </router-link>\n    </div>\n\n    <Documents class=\"my-8\" />\n\n    <Subtitle\n      class=\"my-8\"\n      :title=\"$t('reports')\"\n    />\n\n    <BlockLayout class=\"sm:!px-10 text-2xl lg:text-4xl font-bold !gap-4 text-center lg:text-left lg:!gap-30 items-center flex-col-reverse lg:flex-row\">\n      <a\n        class=\"w-[300px] h-18\"\n        href=\"https://t.me/forlife_ua\"\n      >\n        <button class=\"bg-primary flex-center w-full h-full text-white rounded-lg hover:bg-primary-hover transition-colors duration-200\">\n          Telegram\n          <TelegramIcon class=\"ml-3\" />\n        </button>\n      </a>\n\n      <p\n        class=\"text-primary flex-1 text-lg sm:text-2xl\"\n        v-text=\"$t('reports_text')\"\n      />\n    </BlockLayout>\n\n    <SuccessModal\n      ref=\"successModal\"\n      :title=\"$t('modal_title')\"\n      :subtitle=\"$t('modal_subtitle')\"\n    />\n  </div>\n</template>\n\n<script>\nimport SquaredImage from '../components/ui/SquaredImage';\nimport TelegramIcon from '../components/icons/TelegramIcon';\nimport BlockLayout from '../components/home/BlockLayout';\nimport Documents from '../components/home/Documents';\nimport Subtitle from '../components/ui/Subtitle';\nimport HelpSection from '../components/home/HelpSection';\nimport stopWarImg from '../img/stop.jpeg';\n\nexport default { \n  name: 'Home',\n  components: {\n    HelpSection,\n    Subtitle,\n    Documents,\n    BlockLayout,\n    TelegramIcon,\n    SquaredImage\n  },\n  data () {\n    return {\n      stopWarImg: stopWarImg\n    };\n  }\n};\n</script>\n\n<i18n>\n{\n  \"ua\": {\n    \"volunteer_team\": \"Волонтерьска спільнота\",\n    \"main_text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolorin reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt inculpa qui officia deserunt mollit anim id est laborum.\",\n    \"reports\": \"Звіти\",\n    \"reports_text\": \"Ми активно ведемо наш телеграм канал для того, щоб ви могли стежити за роботою нашого фонду\"\n  },\n  \"en\": {\n    \"volunteer_team\": \"Volunteer community\",\n    \"main_text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolorin reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt inculpa qui officia deserunt mollit anim id est laborum.\", \n    \"reports\": \"Reports\",\n     \"reports_text\": \"We are actively running our telegram channel so that you can follow the work of our fund\"\n  }\n}\n</i18n>\n","<template>\n  <div \n    class=\"relative w-full before:block before:pt-[100%]\"\n  >\n    <div\n      :class=\"['bg-no-repeat bg-center bg-cover absolute inset-0 w-full ', $attrs.class]\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SquaredImage',\n  inheritAttrs: false\n};\n</script>\n","import { render } from \"./SquaredImage.vue?vue&type=template&id=13387313\"\nimport script from \"./SquaredImage.vue?vue&type=script&lang=js\"\nexport * from \"./SquaredImage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Applications/MAMP/htdocs/for_life/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"border mt-8 border-primary w-full rounded-lg p-6 sm:py-11 sm:px-10 xl:px-[160px] flex gap-12\">\n    <slot />\n  </div>\n</template>\n","import { render } from \"./BlockLayout.vue?vue&type=template&id=769c3f6c\"\nconst script = {}\n\nimport exportComponent from \"/Applications/MAMP/htdocs/for_life/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <section>\n    <Subtitle :title=\"$t('documents')\" />\n\n    <BlockLayout class=\"sm:!px-10\">\n      <transition\n        name=\"fade\"\n        mode=\"out-in\"\n      >\n        <div\n          v-if=\"isLoading\"\n          key=\"skeletons\"\n          class=\"flex gap-3 justify-center w-full\"\n        >\n          <Skeleton\n            v-for=\"(document, index) in itemsToShow\"\n            :key=\"`document${index}`\"\n            class=\"1/3 md:w-1/5 max-w-50 before:block before:pt-[130%]\"\n          />\n        </div>\n\n        <Carousel\n          v-else-if=\"showSlider\"\n          key=\"carousel\"\n          :items-to-show=\"itemsToShow\"\n        >\n          <Slide\n            v-for=\"(document, index) in documents\"\n            :key=\"`document${index}`\"\n            class=\"p-3 cursor-pointer\"\n            @click=\"openImage(index)\"\n          >\n            <img :src=\"document.documentImage.url\">\n          </Slide>\n\n          <template #addons>\n            <Navigation />\n            <Pagination />\n          </template>\n        </Carousel>\n\n        <div\n          v-else\n          key=\"staticImages\"\n          class=\"flex gap-3 justify-center w-full\"\n        >\n          <img\n            v-for=\"(document, index) in documents\"\n            :key=\"`document${index}`\"\n            class=\"cursor-pointer w-1/3 md:w-1/5 max-w-50\"\n            :src=\"document.documentImage.url\"\n          >\n        </div>\n      </transition>\n    </BlockLayout>\n  </section>\n</template>\n\n<script>\nimport 'photoswipe/dist/photoswipe.css';\nimport 'vue3-carousel/dist/carousel.css';\nimport ApiCall from '@api';\nimport PhotoSwipe from 'photoswipe';\nimport PhotoSwipeLightbox from 'photoswipe/dist/photoswipe-lightbox.esm.js';\nimport { Carousel, Slide, Pagination, Navigation } from 'vue3-carousel';\n\nimport Skeleton from '../ui/Skeleton';\nimport DocImg from '../../img/doc.jpeg';\nimport BlockLayout from './BlockLayout';\nimport Subtitle from '../ui/Subtitle';\n\nexport default {\n  name: 'Documents',\n  components: {\n    Subtitle,\n    BlockLayout,\n    Carousel,\n    Slide,\n    Pagination,\n    Navigation,\n    Skeleton\n\n  },\n  data () {\n    return {\n      docImg: DocImg,\n      lightbox: null,\n      isLoading: false,\n      documents: [],\n      isMobile: window.innerWidth <= 768\n    };\n  },\n  computed: {\n    showSlider () {\n      return this.documents.length > 5 || (this.isMobile && this.documents.length > 3);\n    },\n\n    itemsToShow () {\n      return this.isMobile ? 3 : 5;\n    }\n  },\n  mounted () {\n    this.fetchDocuments();\n  },\n  unmounted () {\n    if (this.lightbox) {\n      this.lightbox.destroy();\n      this.lightbox = null;\n    }\n  },\n  methods: {\n    initSwiper () {\n      const images = this.documents.map(doc => {\n        return {\n          src: doc.documentImage.url,\n          width: 700,\n          height: 1000\n        };\n      });\n\n      this.lightbox = new PhotoSwipeLightbox({\n        dataSource: images,\n        pswpModule: PhotoSwipe\n      });\n\n      this.lightbox.init();\n    },\n\n    async fetchDocuments () {\n      try {\n        this.isLoading = true;\n        const {data: {data: {allDocuments}}} = await ApiCall.getDocuments();\n        this.documents = allDocuments;\n        this.initSwiper();\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n\n    openImage (slideIndex) {\n      this.lightbox.loadAndOpen(slideIndex);\n    }\n  }\n};\n</script>\n\n<i18n>\n{\n  \"ua\": {\n    \"documents\": \"Документи\"\n  },\n  \"en\": {\n    \"documents\": \"Documents\"\n  }\n}\n</i18n>\n","/*!\n  * PhotoSwipe 5.2.2 - https://photoswipe.com\n  * (c) 2022 Dmytro Semenov\n  */\n/**\r\n  * Creates element and optionally appends it to another.\r\n  *\r\n  * @param {String} className\r\n  * @param {String|NULL} tagName\r\n  * @param {Element|NULL} appendToEl\r\n  */\r\nfunction createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName || 'div');\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\nfunction equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n\r\nfunction roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Object} p1 Point\r\n * @param {Object} p2 Point\r\n */\r\nfunction getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are qual\r\n *\r\n * @param {Object} p1\r\n * @param {Object} p2\r\n */\r\nfunction pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {Number} val\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nfunction clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {Number} x\r\n * @param {Number|null} y\r\n * @param {Number|null} scale\r\n */\r\nfunction toTransformString(x, y, scale) {\r\n  let propValue = 'translate3d('\r\n    + x + 'px,' + (y || 0) + 'px'\r\n    + ',0)';\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ' scale3d('\r\n      + scale + ',' + scale\r\n      + ',1)';\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {DOMElement} el\r\n * @param {Number} x\r\n * @param {Number|null} y\r\n * @param {Number|null} scale\r\n */\r\nfunction setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {Element} el\r\n * @param {String} prop CSS property to animate\r\n * @param {Number} duration in ms\r\n * @param {String|NULL} ease CSS easing function\r\n */\r\nfunction setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? (prop + ' ' + duration + 'ms ' + (ease || defaultCSSEasing))\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n */\r\nfunction setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? (w + 'px') : w;\r\n  el.style.height = (typeof h === 'number') ? (h + 'px') : h;\r\n}\r\n\r\nfunction removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\nfunction decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode();\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\nconst LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {Event} e\r\n */\r\nfunction specialKeyUsed(e) {\r\n  if (e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey) {\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {Element|NodeList|String} option\r\n * @param {String|null} legacySelector\r\n * @param {Element|null} parent\r\n * @returns Element[]\r\n */\r\nfunction getElementsFromOption(option, legacySelector, parent = document) {\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\n\n// Detect passive event listener support\r\nlet supportsPassive = false;\r\n/* eslint-disable */\r\ntry {\r\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n    get: () => {\r\n      supportsPassive = true;\r\n    }\r\n  }));\r\n} catch (e) {}\r\n/* eslint-enable */\r\n\r\nclass DOMEvents {\r\n  constructor() {\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners\r\n   *\r\n   * @param {DOMElement} target\r\n   * @param {String} type Can be multiple, separated by space.\r\n   * @param {Function} listener\r\n   * @param {Boolean} passive\r\n   */\r\n  add(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive);\r\n  }\r\n\r\n  /**\r\n   * Removes event listeners\r\n   *\r\n   * @param {DOMElement} target\r\n   * @param {String} type\r\n   * @param {Function} listener\r\n   * @param {Boolean} passive\r\n   */\r\n  remove(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive, true);\r\n  }\r\n\r\n  /**\r\n   * Removes all bound events\r\n   */\r\n  removeAll() {\r\n    this._pool.forEach((poolItem) => {\r\n      this._toggleListener(\r\n        poolItem.target,\r\n        poolItem.type,\r\n        poolItem.listener,\r\n        poolItem.passive,\r\n        true,\r\n        true\r\n      );\r\n    });\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds or removes event\r\n   *\r\n   * @param {DOMElement} target\r\n   * @param {String} type\r\n   * @param {Function} listener\r\n   * @param {Boolean} passive\r\n   * @param {Boolean} unbind Whether the event should be added or removed\r\n   * @param {Boolean} skipPool Whether events pool should be skipped\r\n   */\r\n  _toggleListener(target, type, listener, passive, unbind, skipPool) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    const methodName = (unbind ? 'remove' : 'add') + 'EventListener';\r\n    type = type.split(' ');\r\n    type.forEach((eType) => {\r\n      if (eType) {\r\n        // Events pool is used to easily unbind all events when PhotoSwipe is closed,\r\n        // so developer doesn't need to do this manually\r\n        if (!skipPool) {\r\n          if (unbind) {\r\n            // Remove from the events pool\r\n            this._pool = this._pool.filter((poolItem) => {\r\n              return poolItem.type !== eType\r\n                || poolItem.listener !== listener\r\n                || poolItem.target !== target;\r\n            });\r\n          } else {\r\n            // Add to the events pool\r\n            this._pool.push({\r\n              target,\r\n              type: eType,\r\n              listener,\r\n              passive\r\n            });\r\n          }\r\n        }\r\n\r\n\r\n        // most PhotoSwipe events call preventDefault,\r\n        // and we do not need browser to scroll the page\r\n        const eventOptions = supportsPassive ? { passive: (passive || false) } : false;\r\n\r\n        target[methodName](\r\n          eType,\r\n          listener,\r\n          eventOptions\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\n\nfunction getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {String}  prop 'left', 'top', 'bottom', 'right'\r\n * @param {Object}  options PhotoSwipe options\r\n * @param {Object}  viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {Object}  itemData Data about the slide\r\n * @param {Integer} index Slide index\r\n * @returns {Number}\r\n */\r\nfunction parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    if (options[legacyPropName]) {\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return paddingValue || 0;\r\n}\r\n\r\n\r\nfunction getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\n\n/**\r\n * Calculates minimum, maximum and initial (center) bounds of a slide\r\n */\r\n\r\nclass PanBounds {\r\n  constructor(slide) {\r\n    this.slide = slide;\r\n\r\n    this.currZoomLevel = 1;\r\n\r\n    this.center = {};\r\n    this.max = {};\r\n    this.min = {};\r\n\r\n    this.reset();\r\n  }\r\n\r\n  // _getItemBounds\r\n  update(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n\r\n    if (!this.slide.width) {\r\n      this.reset();\r\n    } else {\r\n      this._updateAxis('x');\r\n      this._updateAxis('y');\r\n      this.slide.pswp.dispatch('calcBounds', { slide: this.slide });\r\n    }\r\n  }\r\n\r\n  // _calculateItemBoundsForAxis\r\n  _updateAxis(axis) {\r\n    const { pswp } = this.slide;\r\n    const elSize = this.slide[axis === 'x' ? 'width' : 'height'] * this.currZoomLevel;\r\n    const paddingProp = axis === 'x' ? 'left' : 'top';\r\n    const padding = parsePaddingOption(\r\n      paddingProp,\r\n      pswp.options,\r\n      pswp.viewportSize,\r\n      this.slide.data,\r\n      this.slide.index\r\n    );\r\n\r\n    const panAreaSize = this.slide.panAreaSize[axis];\r\n\r\n    // Default position of element.\r\n    // By defaul it is center of viewport:\r\n    this.center[axis] = Math.round((panAreaSize - elSize) / 2) + padding;\r\n\r\n    // maximum pan position\r\n    this.max[axis] = (elSize > panAreaSize)\r\n      ? Math.round(panAreaSize - elSize) + padding\r\n      : this.center[axis];\r\n\r\n    // minimum pan position\r\n    this.min[axis] = (elSize > panAreaSize)\r\n      ? padding\r\n      : this.center[axis];\r\n  }\r\n\r\n  // _getZeroBounds\r\n  reset() {\r\n    this.center.x = 0;\r\n    this.center.y = 0;\r\n    this.max.x = 0;\r\n    this.max.y = 0;\r\n    this.min.x = 0;\r\n    this.min.y = 0;\r\n  }\r\n\r\n  /**\r\n   * Correct pan position if it's beyond the bounds\r\n   *\r\n   * @param {String} axis x or y\r\n   * @param {Object} panOffset\r\n   */\r\n  correctPan(axis, panOffset) { // checkPanBounds\r\n    return clamp(panOffset, this.max[axis], this.min[axis]);\r\n  }\r\n}\n\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\n\r\nconst MAX_IMAGE_WIDTH = 4000;\r\n\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {Object} options PhotoSwipe options\r\n   * @param {Object} itemData Slide data\r\n   * @param {Integer} index Slide index\r\n   * @param {PhotoSwipe|undefined} pswp PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    this.elementSize = {\r\n      x: maxWidth,\r\n      y: maxHeight\r\n    };\r\n\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = this.panAreaSize.x / this.elementSize.x;\r\n    const vRatio = this.panAreaSize.y / this.elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @param {Mixed} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    // zoom.initial\r\n    // zoom.secondary\r\n    // zoom.max\r\n    const optionValue = this.options[optionPrefix + 'ZoomLevel'];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @return {Number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @return {Number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @return {Number}\r\n   */\r\n  _getMax() {\r\n    const currZoomLevel = this._parseZoomLevelOption('max');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return Math.max(1, this.fit * 4);\r\n  }\r\n}\n\n/**\r\n * Renders and allows to control a single slide\r\n */\r\n\r\nclass Slide {\r\n  constructor(data, index, pswp) {\r\n    this.data = data;\r\n    this.index = index;\r\n    this.pswp = pswp;\r\n    this.isActive = (index === pswp.currIndex);\r\n    this.currentResolution = 0;\r\n    this.panAreaSize = {};\r\n\r\n    this.isFirstSlide = (this.isActive && !pswp.opener.isOpen);\r\n\r\n    this.zoomLevels = new ZoomLevel(pswp.options, data, index, pswp);\r\n\r\n    this.pswp.dispatch('gettingData', {\r\n      slide: this,\r\n      data: this.data,\r\n      index\r\n    });\r\n\r\n    this.pan = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n\r\n    this.content = this.pswp.contentLoader.getContentBySlide(this);\r\n    this.container = createElement('pswp__zoom-wrap');\r\n\r\n    this.currZoomLevel = 1;\r\n    this.width = this.content.width;\r\n    this.height = this.content.height;\r\n\r\n    this.bounds = new PanBounds(this);\r\n\r\n    this.prevDisplayedWidth = -1;\r\n    this.prevDisplayedHeight = -1;\r\n\r\n    this.pswp.dispatch('slideInit', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * If this slide is active/current/visible\r\n   *\r\n   * @param {Boolean} isActive\r\n   */\r\n  setIsActive(isActive) {\r\n    if (isActive && !this.isActive) {\r\n      // slide just became active\r\n      this.activate();\r\n    } else if (!isActive && this.isActive) {\r\n      // slide just became non-active\r\n      this.deactivate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Appends slide content to DOM\r\n   */\r\n  append(holderElement) {\r\n    this.holderElement = holderElement;\r\n\r\n    // Slide appended to DOM\r\n    if (!this.data) {\r\n      this.holderElement.innerHTML = '';\r\n      return;\r\n    }\r\n\r\n    this.calculateSize();\r\n\r\n    this.container.transformOrigin = '0 0';\r\n\r\n    this.load();\r\n    this.appendHeavy();\r\n    this.updateContentSize();\r\n\r\n    this.holderElement.innerHTML = '';\r\n    this.holderElement.appendChild(this.container);\r\n\r\n    this.zoomAndPanToInitial();\r\n\r\n    this.pswp.dispatch('firstZoomPan', { slide: this });\r\n\r\n    this.applyCurrentZoomPan();\r\n\r\n    this.pswp.dispatch('afterSetContent', { slide: this });\r\n\r\n    if (this.isActive) {\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  load() {\r\n    this.content.load();\r\n    this.pswp.dispatch('slideLoad', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Append \"heavy\" DOM elements\r\n   *\r\n   * This may depend on a type of slide,\r\n   * but generally these are large images.\r\n   */\r\n  appendHeavy() {\r\n    const { pswp } = this;\r\n    const appendHeavyNearby = true; // todo\r\n\r\n    // Avoid appending heavy elements during animations\r\n    if (this.heavyAppended\r\n        || !pswp.opener.isOpen\r\n        || pswp.mainScroll.isShifted()\r\n        || (!this.isActive && !appendHeavyNearby)) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('appendHeavy', { slide: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.heavyAppended = true;\r\n\r\n    this.content.append();\r\n\r\n    this.pswp.dispatch('appendHeavyContent', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide is active (selected).\r\n   *\r\n   * If it's part of opening/closing transition -\r\n   * activate() will trigger after the transition is ended.\r\n   */\r\n  activate() {\r\n    this.isActive = true;\r\n    this.appendHeavy();\r\n    this.content.activate();\r\n    this.pswp.dispatch('slideActivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide becomes inactive.\r\n   *\r\n   * Slide can become inactive only after it was active.\r\n   */\r\n  deactivate() {\r\n    this.isActive = false;\r\n    this.content.deactivate();\r\n\r\n    // reset zoom level\r\n    this.currentResolution = 0;\r\n    this.zoomAndPanToInitial();\r\n    this.applyCurrentZoomPan();\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('slideDeactivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * The slide should destroy itself, it will never be used again.\r\n   * (unbind all events and destroy internal components)\r\n   */\r\n  destroy() {\r\n    this.content.hasSlide = false;\r\n    this.content.remove();\r\n    this.pswp.dispatch('slideDestroy', { slide: this });\r\n  }\r\n\r\n  resize() {\r\n    if (this.currZoomLevel === this.zoomLevels.initial || !this.isActive) {\r\n      // Keep initial zoom level if it was before the resize,\r\n      // as well as when this slide is not active\r\n\r\n      // Reset position and scale to original state\r\n      this.calculateSize();\r\n      this.currentResolution = 0;\r\n      this.zoomAndPanToInitial();\r\n      this.applyCurrentZoomPan();\r\n      this.updateContentSize();\r\n    } else {\r\n      // readjust pan position if it's beyond the bounds\r\n      this.calculateSize();\r\n      this.bounds.update(this.currZoomLevel);\r\n      this.panTo(this.pan.x, this.pan.y);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Apply size to current slide content,\r\n   * based on the current resolution and scale.\r\n   *\r\n   * @param {Boolean} force if size should be updated even if dimensions weren't changed\r\n   */\r\n  updateContentSize(force) {\r\n    // Use initial zoom level\r\n    // if resolution is not defined (user didn't zoom yet)\r\n    const scaleMultiplier = this.currentResolution || this.zoomLevels.initial;\r\n\r\n    if (!scaleMultiplier) {\r\n      return;\r\n    }\r\n\r\n    const width = Math.round(this.width * scaleMultiplier) || this.pswp.viewportSize.x;\r\n    const height = Math.round(this.height * scaleMultiplier) || this.pswp.viewportSize.y;\r\n\r\n    if (!this.sizeChanged(width, height) && !force) {\r\n      return;\r\n    }\r\n    this.content.setDisplayedSize(width, height);\r\n  }\r\n\r\n  sizeChanged(width, height) {\r\n    if (width !== this.prevDisplayedWidth\r\n        || height !== this.prevDisplayedHeight) {\r\n      this.prevDisplayedWidth = width;\r\n      this.prevDisplayedHeight = height;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getPlaceholderElement() {\r\n    if (this.content.placeholder) {\r\n      return this.content.placeholder.element;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Zoom current slide image to...\r\n   *\r\n   * @param  {Number} destZoomLevel      Destination zoom level.\r\n   * @param  {Object|false} centerPoint  Transform origin center point,\r\n   *                                     or false if viewport center should be used.\r\n   * @param  {Number} transitionDuration Transition duration, may be set to 0.\r\n   * @param  {Boolean|null} ignoreBounds Minimum and maximum zoom levels will be ignored.\r\n   * @return {Boolean|null}              Returns true if animated.\r\n   */\r\n  zoomTo(destZoomLevel, centerPoint, transitionDuration, ignoreBounds) {\r\n    const { pswp } = this;\r\n    if (!this.isZoomable()\r\n        || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    pswp.dispatch('beforeZoomTo', {\r\n      destZoomLevel, centerPoint, transitionDuration\r\n    });\r\n\r\n    // stop all pan and zoom transitions\r\n    pswp.animations.stopAllPan();\r\n\r\n    // if (!centerPoint) {\r\n    //   centerPoint = pswp.getViewportCenterPoint();\r\n    // }\r\n\r\n    const prevZoomLevel = this.currZoomLevel;\r\n\r\n    if (!ignoreBounds) {\r\n      destZoomLevel = clamp(destZoomLevel, this.zoomLevels.min, this.zoomLevels.max);\r\n    }\r\n\r\n    // if (transitionDuration === undefined) {\r\n    //   transitionDuration = this.pswp.options.zoomAnimationDuration;\r\n    // }\r\n\r\n    this.setZoomLevel(destZoomLevel);\r\n    this.pan.x = this.calculateZoomToPanOffset('x', centerPoint, prevZoomLevel);\r\n    this.pan.y = this.calculateZoomToPanOffset('y', centerPoint, prevZoomLevel);\r\n    roundPoint(this.pan);\r\n\r\n    const finishTransition = () => {\r\n      this._setResolution(destZoomLevel);\r\n      this.applyCurrentZoomPan();\r\n    };\r\n\r\n    if (!transitionDuration) {\r\n      finishTransition();\r\n    } else {\r\n      pswp.animations.startTransition({\r\n        isPan: true,\r\n        name: 'zoomTo',\r\n        target: this.container,\r\n        transform: this.getCurrentTransform(),\r\n        onComplete: finishTransition,\r\n        duration: transitionDuration,\r\n        easing: pswp.options.easing\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleZoom(centerPoint) {\r\n    this.zoomTo(\r\n      this.currZoomLevel === this.zoomLevels.initial\r\n        ? this.zoomLevels.secondary : this.zoomLevels.initial,\r\n      centerPoint,\r\n      this.pswp.options.zoomAnimationDuration\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Updates zoom level property and recalculates new pan bounds,\r\n   * unlike zoomTo it does not apply transform (use applyCurrentZoomPan)\r\n   *\r\n   * @param {Number} currZoomLevel\r\n   */\r\n  setZoomLevel(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n    this.bounds.update(this.currZoomLevel);\r\n  }\r\n\r\n  /**\r\n   * Get pan position after zoom at a given `point`.\r\n   *\r\n   * Always call setZoomLevel(newZoomLevel) beforehand to recalculate\r\n   * pan bounds according to the new zoom level.\r\n   *\r\n   * @param {String} axis\r\n   * @param {Object|null} centerPoint point based on which zoom is performed,\r\n   *                                  usually refers to the current mouse position,\r\n   *                                  if false - viewport center will be used.\r\n   * @param {Number|null} prevZoomLevel Zoom level before new zoom was applied.\r\n   */\r\n  calculateZoomToPanOffset(axis, point, prevZoomLevel) {\r\n    const totalPanDistance = this.bounds.max[axis] - this.bounds.min[axis];\r\n    if (totalPanDistance === 0) {\r\n      return this.bounds.center[axis];\r\n    }\r\n\r\n    if (!point) {\r\n      point = this.pswp.getViewportCenterPoint();\r\n    }\r\n\r\n    const zoomFactor = this.currZoomLevel / prevZoomLevel;\r\n    return this.bounds.correctPan(\r\n      axis,\r\n      (this.pan[axis] - point[axis]) * zoomFactor + point[axis]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Apply pan and keep it within bounds.\r\n   *\r\n   * @param {Number} panX\r\n   * @param {Number} panY\r\n   */\r\n  panTo(panX, panY) {\r\n    this.pan.x = this.bounds.correctPan('x', panX);\r\n    this.pan.y = this.bounds.correctPan('y', panY);\r\n    this.applyCurrentZoomPan();\r\n  }\r\n\r\n  /**\r\n   * If the slide in the current state can be panned by the user\r\n   */\r\n  isPannable() {\r\n    return this.width && (this.currZoomLevel > this.zoomLevels.fit);\r\n  }\r\n\r\n  /**\r\n   * If the slide can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.width && this.content.isZoomable();\r\n  }\r\n\r\n  /**\r\n   * Apply transform and scale based on\r\n   * the current pan position (this.pan) and zoom level (this.currZoomLevel)\r\n   */\r\n  applyCurrentZoomPan() {\r\n    this._applyZoomTransform(this.pan.x, this.pan.y, this.currZoomLevel);\r\n    if (this === this.pswp.currSlide) {\r\n      this.pswp.dispatch('zoomPanUpdate', { slide: this });\r\n    }\r\n  }\r\n\r\n  zoomAndPanToInitial() {\r\n    this.currZoomLevel = this.zoomLevels.initial;\r\n\r\n    // pan according to the zoom level\r\n    this.bounds.update(this.currZoomLevel);\r\n    equalizePoints(this.pan, this.bounds.center);\r\n    this.pswp.dispatch('initialZoomPan', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Set translate and scale based on current resolution\r\n   *\r\n   * @param {Number} x\r\n   * @param {Number} y\r\n   * @param {Number} zoom\r\n   */\r\n  _applyZoomTransform(x, y, zoom) {\r\n    zoom /= this.currentResolution || this.zoomLevels.initial;\r\n    setTransform(this.container, x, y, zoom);\r\n  }\r\n\r\n  calculateSize() {\r\n    const { pswp } = this;\r\n\r\n    equalizePoints(\r\n      this.panAreaSize,\r\n      getPanAreaSize(pswp.options, pswp.viewportSize, this.data, this.index)\r\n    );\r\n\r\n    this.zoomLevels.update(this.width, this.height, this.panAreaSize);\r\n\r\n    pswp.dispatch('calcSlideSize', {\r\n      slide: this\r\n    });\r\n  }\r\n\r\n  getCurrentTransform() {\r\n    const scale = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);\r\n    return toTransformString(this.pan.x, this.pan.y, scale);\r\n  }\r\n\r\n  /**\r\n   * Set resolution and re-render the image.\r\n   *\r\n   * For example, if the real image size is 2000x1500,\r\n   * and resolution is 0.5 - it will be rendered as 1000x750.\r\n   *\r\n   * Image with zoom level 2 and resolution 0.5 is\r\n   * the same as image with zoom level 1 and resolution 1.\r\n   *\r\n   * Used to optimize animations and make\r\n   * sure that browser renders image in highest quality.\r\n   * Also used by responsive images to load the correct one.\r\n   *\r\n   * @param {Number} newResolution\r\n   */\r\n  _setResolution(newResolution) {\r\n    if (newResolution === this.currentResolution) {\r\n      return;\r\n    }\r\n\r\n    this.currentResolution = newResolution;\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('resolutionChanged');\r\n  }\r\n}\n\n/**\r\n * Handles single pointer dragging\r\n */\r\n\r\nconst PAN_END_FRICTION = 0.35;\r\nconst VERTICAL_DRAG_FRICTION = 0.6;\r\n\r\n// 1 corresponds to the third of viewport height\r\nconst MIN_RATIO_TO_CLOSE = 0.4;\r\n\r\n// Minimum speed required to navigate\r\n// to next or previous slide\r\nconst MIN_NEXT_SLIDE_SPEED = 0.5;\r\n\r\nfunction project(initialVelocity, decelerationRate) {\r\n  return initialVelocity * decelerationRate / (1 - decelerationRate);\r\n}\r\n\r\nclass DragHandler {\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    this.pswp = gestures.pswp;\r\n    this.startPan = {};\r\n  }\r\n\r\n  start() {\r\n    equalizePoints(this.startPan, this.pswp.currSlide.pan);\r\n    this.pswp.animations.stopAll();\r\n  }\r\n\r\n  change() {\r\n    const { p1, prevP1, dragAxis, pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (dragAxis === 'y'\r\n        && pswp.options.closeOnVerticalDrag\r\n        && currSlide.currZoomLevel <= currSlide.zoomLevels.fit\r\n        && !this.gestures.isMultitouch) {\r\n      // Handle vertical drag to close\r\n      const panY = currSlide.pan.y + (p1.y - prevP1.y);\r\n      if (!pswp.dispatch('verticalDrag', { panY }).defaultPrevented) {\r\n        this._setPanWithFriction('y', panY, VERTICAL_DRAG_FRICTION);\r\n        const bgOpacity = 1 - Math.abs(this._getVerticalDragRatio(currSlide.pan.y));\r\n        pswp.applyBgOpacity(bgOpacity);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      const mainScrollChanged = this._panOrMoveMainScroll('x');\r\n      if (!mainScrollChanged) {\r\n        this._panOrMoveMainScroll('y');\r\n\r\n        roundPoint(currSlide.pan);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    }\r\n  }\r\n\r\n  end() {\r\n    const { pswp, velocity } = this.gestures;\r\n    const { mainScroll } = pswp;\r\n    let indexDiff = 0;\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    // Handle main scroll if it's shifted\r\n    if (mainScroll.isShifted()) {\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - mainScroll.getCurrSlideX();\r\n\r\n      // Ratio between 0 and 1:\r\n      // 0 - slide is not visible at all,\r\n      // 0.5 - half of the slide is vicible\r\n      // 1 - slide is fully visible\r\n      const currentSlideVisibilityRatio = (mainScrollShiftDiff / pswp.viewportSize.x);\r\n\r\n      // Go next slide.\r\n      //\r\n      // - if velocity and its direction is matched\r\n      //   and we see at least tiny part of the next slide\r\n      //\r\n      // - or if we see less than 50% of the current slide\r\n      //   and velocity is close to 0\r\n      //\r\n      if ((velocity.x < -MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio < 0)\r\n          || (velocity.x < 0.1 && currentSlideVisibilityRatio < -0.5)) {\r\n        // Go to next slide\r\n        indexDiff = 1;\r\n        velocity.x = Math.min(velocity.x, 0);\r\n      } else if ((velocity.x > MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio > 0)\r\n          || (velocity.x > -0.1 && currentSlideVisibilityRatio > 0.5)) {\r\n        // Go to prev slide\r\n        indexDiff = -1;\r\n        velocity.x = Math.max(velocity.x, 0);\r\n      }\r\n\r\n      mainScroll.moveIndexBy(indexDiff, true, velocity.x);\r\n    }\r\n\r\n    // Restore zoom level\r\n    if (pswp.currSlide.currZoomLevel > pswp.currSlide.zoomLevels.max\r\n        || this.gestures.isMultitouch) {\r\n      this.gestures.zoomLevels.correctZoomPan(true);\r\n    } else {\r\n      // we run two animations instead of one,\r\n      // as each axis has own pan boundaries and thus different spring function\r\n      // (correctZoomPan does not have this functionality,\r\n      //  it animates all properties with single timing function)\r\n      this._finishPanGestureForAxis('x');\r\n      this._finishPanGestureForAxis('y');\r\n    }\r\n  }\r\n\r\n  _finishPanGestureForAxis(axis) {\r\n    const { pswp } = this;\r\n    const { currSlide } = pswp;\r\n    const { velocity } = this.gestures;\r\n    const { pan, bounds } = currSlide;\r\n    const panPos = pan[axis];\r\n    const restoreBgOpacity = (pswp.bgOpacity < 1 && axis === 'y');\r\n\r\n    // 0.995 means - scroll view loses 0.5% of its velocity per millisecond\r\n    // Inceasing this number will reduce travel distance\r\n    const decelerationRate = 0.995; // 0.99\r\n\r\n    // Pan position if there is no bounds\r\n    const projectedPosition = panPos + project(velocity[axis], decelerationRate);\r\n\r\n    if (restoreBgOpacity) {\r\n      const vDragRatio = this._getVerticalDragRatio(panPos);\r\n      const projectedVDragRatio = this._getVerticalDragRatio(projectedPosition);\r\n\r\n      // If we are above and moving upwards,\r\n      // or if we are below and moving downwards\r\n      if ((vDragRatio < 0 && projectedVDragRatio < -MIN_RATIO_TO_CLOSE)\r\n          || (vDragRatio > 0 && projectedVDragRatio > MIN_RATIO_TO_CLOSE)) {\r\n        pswp.close();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Pan position with corrected bounds\r\n    const correctedPanPosition = bounds.correctPan(axis, projectedPosition);\r\n\r\n    // Exit if pan position should not be changed\r\n    // or if speed it too low\r\n    if (panPos === correctedPanPosition) {\r\n      return;\r\n    }\r\n\r\n    // Overshoot if the final position is out of pan bounds\r\n    const dampingRatio = (correctedPanPosition === projectedPosition) ? 1 : 0.82;\r\n\r\n    const initialBgOpacity = pswp.bgOpacity;\r\n    const totalPanDist = correctedPanPosition - panPos;\r\n\r\n    pswp.animations.startSpring({\r\n      name: 'panGesture' + axis,\r\n      isPan: true,\r\n      start: panPos,\r\n      end: correctedPanPosition,\r\n      velocity: velocity[axis],\r\n      dampingRatio,\r\n      onUpdate: (pos) => {\r\n        // Animate opacity of background relative to Y pan position of an image\r\n        if (restoreBgOpacity && pswp.bgOpacity < 1) {\r\n          // 0 - start of animation, 1 - end of animation\r\n          const animationProgressRatio = 1 - (correctedPanPosition - pos) / totalPanDist;\r\n\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * animationProgressRatio,\r\n            0,\r\n            1\r\n          ));\r\n        }\r\n\r\n        pan[axis] = Math.floor(pos);\r\n        currSlide.applyCurrentZoomPan();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update position of the main scroll,\r\n   * or/and update pan position of the current slide.\r\n   *\r\n   * Should return true if it changes (or can change) main scroll.\r\n   *\r\n   * @param {String} axis\r\n   */\r\n  _panOrMoveMainScroll(axis) {\r\n    const { p1, pswp, dragAxis, prevP1, isMultitouch } = this.gestures;\r\n    const { currSlide, mainScroll } = pswp;\r\n    const delta = (p1[axis] - prevP1[axis]);\r\n    const newMainScrollX = mainScroll.x + delta;\r\n\r\n    if (!delta) {\r\n      return;\r\n    }\r\n\r\n    // Always move main scroll if image can not be panned\r\n    if (axis === 'x' && !currSlide.isPannable() && !isMultitouch) {\r\n      mainScroll.moveTo(newMainScrollX, true);\r\n      return true; // changed main scroll\r\n    }\r\n\r\n    const { bounds } = currSlide;\r\n    const newPan = currSlide.pan[axis] + delta;\r\n\r\n    if (pswp.options.allowPanToNext\r\n        && dragAxis === 'x'\r\n        && axis === 'x'\r\n        && !isMultitouch) {\r\n      const currSlideMainScrollX = mainScroll.getCurrSlideX();\r\n\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - currSlideMainScrollX;\r\n\r\n      const isLeftToRight = delta > 0;\r\n      const isRightToLeft = !isLeftToRight;\r\n\r\n      if (newPan > bounds.min[axis] && isLeftToRight) {\r\n        // Panning from left to right, beyond the left edge\r\n\r\n        // Wether the image was at minimum pan position (or less)\r\n        // when this drag gesture started.\r\n        // Minimum pan position refers to the left edge of the image.\r\n        const wasAtMinPanPosition = (bounds.min[axis] <= this.startPan[axis]);\r\n\r\n        if (wasAtMinPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else if (newPan < bounds.max[axis] && isRightToLeft) {\r\n        // Paning from right to left, beyond the right edge\r\n\r\n        // Maximum pan position refers to the right edge of the image.\r\n        const wasAtMaxPanPosition = (this.startPan[axis] <= bounds.max[axis]);\r\n\r\n        if (wasAtMaxPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else {\r\n        // If main scroll is shifted\r\n        if (mainScrollShiftDiff !== 0) {\r\n          // If main scroll is shifted right\r\n          if (mainScrollShiftDiff > 0 /*&& isRightToLeft*/) {\r\n            mainScroll.moveTo(Math.max(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          } else if (mainScrollShiftDiff < 0 /*&& isLeftToRight*/) {\r\n            // Main scroll is shifted left (Position is less than 0 comparing to the viewport 0)\r\n            mainScroll.moveTo(Math.min(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          }\r\n        } else {\r\n          // We are within pan bounds, so just pan\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      }\r\n    } else {\r\n      if (axis === 'y') {\r\n        // Do not pan vertically if main scroll is shifted o\r\n        if (!mainScroll.isShifted() && bounds.min.y !== bounds.max.y) {\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      } else {\r\n        this._setPanWithFriction(axis, newPan);\r\n      }\r\n    }\r\n  }\r\n  //\r\n  // If we move above - the ratio is negative\r\n  // If we move below the ratio is positive\r\n\r\n  /**\r\n   * Relation between pan Y position and third of viewport height.\r\n   *\r\n   * When we are at initial position (center bounds) - the ratio is 0,\r\n   * if position is shifted upwards - the ratio is negative,\r\n   * if position is shifted downwards - the ratio is positive.\r\n   *\r\n   * @param {Number} panY The current pan Y position.\r\n   */\r\n  _getVerticalDragRatio(panY) {\r\n    return (panY - this.pswp.currSlide.bounds.center.y)\r\n            / (this.pswp.viewportSize.y / 3);\r\n  }\r\n\r\n  /**\r\n   * Set pan position of the current slide.\r\n   * Apply friction if the position is beyond the pan bounds,\r\n   * or if custom friction is defined.\r\n   *\r\n   * @param {String} axis\r\n   * @param {Number} potentialPan\r\n   * @param {Number|null} customFriction (0.1 - 1)\r\n   */\r\n  _setPanWithFriction(axis, potentialPan, customFriction) {\r\n    const { pan, bounds } = this.pswp.currSlide;\r\n    const correctedPan = bounds.correctPan(axis, potentialPan);\r\n    // If we are out of pan bounds\r\n    if (correctedPan !== potentialPan || customFriction) {\r\n      const delta = Math.round(potentialPan - pan[axis]);\r\n      pan[axis] += delta * (customFriction || PAN_END_FRICTION);\r\n    } else {\r\n      pan[axis] = potentialPan;\r\n    }\r\n  }\r\n}\n\nconst UPPER_ZOOM_FRICTION = 0.05;\r\nconst LOWER_ZOOM_FRICTION = 0.15;\r\n\r\n\r\n/**\r\n * Get center point between two points\r\n *\r\n * @param {Point} p\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\r\nfunction getZoomPointsCenter(p, p1, p2) {\r\n  p.x = (p1.x + p2.x) / 2;\r\n  p.y = (p1.y + p2.y) / 2;\r\n  return p;\r\n}\r\n\r\nclass ZoomHandler {\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    this.pswp = this.gestures.pswp;\r\n    this._startPan = {};\r\n\r\n    this._startZoomPoint = {};\r\n    this._zoomPoint = {};\r\n  }\r\n\r\n  start() {\r\n    this._startZoomLevel = this.pswp.currSlide.currZoomLevel;\r\n    equalizePoints(this._startPan, this.pswp.currSlide.pan);\r\n    this.pswp.animations.stopAllPan();\r\n    this._wasOverFitZoomLevel = false;\r\n  }\r\n\r\n  change() {\r\n    const { p1, startP1, p2, startP2, pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    const minZoomLevel = currSlide.zoomLevels.min;\r\n    const maxZoomLevel = currSlide.zoomLevels.max;\r\n\r\n    if (!currSlide.isZoomable() || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    getZoomPointsCenter(this._startZoomPoint, startP1, startP2);\r\n    getZoomPointsCenter(this._zoomPoint, p1, p2);\r\n\r\n    let currZoomLevel = (1 / getDistanceBetween(startP1, startP2))\r\n                      * getDistanceBetween(p1, p2)\r\n                      * this._startZoomLevel;\r\n\r\n    // slightly over the zoom.fit\r\n    if (currZoomLevel > currSlide.zoomLevels.initial + (currSlide.zoomLevels.initial / 15)) {\r\n      this._wasOverFitZoomLevel = true;\r\n    }\r\n\r\n    if (currZoomLevel < minZoomLevel) {\r\n      if (pswp.options.pinchToClose\r\n          && !this._wasOverFitZoomLevel\r\n          && this._startZoomLevel <= currSlide.zoomLevels.initial) {\r\n        // fade out background if zooming out\r\n        const bgOpacity = 1 - ((minZoomLevel - currZoomLevel) / (minZoomLevel / 1.2));\r\n        if (!pswp.dispatch('pinchClose', { bgOpacity }).defaultPrevented) {\r\n          pswp.applyBgOpacity(bgOpacity);\r\n        }\r\n      } else {\r\n        // Apply the friction if zoom level is below the min\r\n        currZoomLevel = minZoomLevel - (minZoomLevel - currZoomLevel) * LOWER_ZOOM_FRICTION;\r\n      }\r\n    } else if (currZoomLevel > maxZoomLevel) {\r\n      // Apply the friction if zoom level is above the max\r\n      currZoomLevel = maxZoomLevel + (currZoomLevel - maxZoomLevel) * UPPER_ZOOM_FRICTION;\r\n    }\r\n\r\n    currSlide.pan.x = this._calculatePanForZoomLevel('x', currZoomLevel);\r\n    currSlide.pan.y = this._calculatePanForZoomLevel('y', currZoomLevel);\r\n\r\n    currSlide.setZoomLevel(currZoomLevel);\r\n    currSlide.applyCurrentZoomPan();\r\n  }\r\n\r\n  end() {\r\n    const { pswp } = this;\r\n    const { currSlide } = pswp;\r\n    if (currSlide.currZoomLevel < currSlide.zoomLevels.initial\r\n        && !this._wasOverFitZoomLevel\r\n        && pswp.options.pinchToClose) {\r\n      pswp.close();\r\n    } else {\r\n      this.correctZoomPan();\r\n    }\r\n  }\r\n\r\n  _calculatePanForZoomLevel(axis, currZoomLevel) {\r\n    const zoomFactor = currZoomLevel / this._startZoomLevel;\r\n    return this._zoomPoint[axis]\r\n            - ((this._startZoomPoint[axis] - this._startPan[axis]) * zoomFactor);\r\n  }\r\n\r\n  /**\r\n   * Correct currZoomLevel and pan if they are\r\n   * beyond minimum or maximum values.\r\n   * With animation.\r\n   *\r\n   * @param {Boolean} ignoreGesture Wether gesture coordinates should be ignored\r\n   *                                when calculating destination pan position.\r\n   */\r\n  correctZoomPan(ignoreGesture) {\r\n    const { pswp } = this;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide.isZoomable()) {\r\n      return;\r\n    }\r\n\r\n    if (this._zoomPoint.x === undefined) {\r\n      ignoreGesture = true;\r\n    }\r\n\r\n    const prevZoomLevel = currSlide.currZoomLevel;\r\n\r\n    let destinationZoomLevel;\r\n    let currZoomLevelNeedsChange = true;\r\n\r\n    if (prevZoomLevel < currSlide.zoomLevels.initial) {\r\n      destinationZoomLevel = currSlide.zoomLevels.initial;\r\n      // zoom to min\r\n    } else if (prevZoomLevel > currSlide.zoomLevels.max) {\r\n      destinationZoomLevel = currSlide.zoomLevels.max;\r\n      // zoom to max\r\n    } else {\r\n      currZoomLevelNeedsChange = false;\r\n      destinationZoomLevel = prevZoomLevel;\r\n    }\r\n\r\n    const initialBgOpacity = pswp.bgOpacity;\r\n    const restoreBgOpacity = pswp.bgOpacity < 1;\r\n\r\n    const initialPan = equalizePoints({}, currSlide.pan);\r\n    let destinationPan = equalizePoints({}, initialPan);\r\n\r\n    if (ignoreGesture) {\r\n      this._zoomPoint.x = 0;\r\n      this._zoomPoint.y = 0;\r\n      this._startZoomPoint.x = 0;\r\n      this._startZoomPoint.y = 0;\r\n      this._startZoomLevel = prevZoomLevel;\r\n      equalizePoints(this._startPan, initialPan);\r\n    }\r\n\r\n    if (currZoomLevelNeedsChange) {\r\n      destinationPan = {\r\n        x: this._calculatePanForZoomLevel('x', destinationZoomLevel),\r\n        y: this._calculatePanForZoomLevel('y', destinationZoomLevel)\r\n      };\r\n    }\r\n\r\n    // set zoom level, so pan bounds are updated according to it\r\n    currSlide.setZoomLevel(destinationZoomLevel);\r\n\r\n    destinationPan = {\r\n      x: currSlide.bounds.correctPan('x', destinationPan.x),\r\n      y: currSlide.bounds.correctPan('y', destinationPan.y)\r\n    };\r\n\r\n    // return zoom level and its bounds to initial\r\n    currSlide.setZoomLevel(prevZoomLevel);\r\n\r\n    let panNeedsChange = true;\r\n    if (pointsEqual(destinationPan, initialPan)) {\r\n      panNeedsChange = false;\r\n    }\r\n\r\n    if (!panNeedsChange && !currZoomLevelNeedsChange && !restoreBgOpacity) {\r\n      // update resolution after gesture\r\n      currSlide._setResolution(destinationZoomLevel);\r\n      currSlide.applyCurrentZoomPan();\r\n\r\n      // nothing to animate\r\n      return;\r\n    }\r\n\r\n    pswp.animations.stopAllPan();\r\n\r\n    pswp.animations.startSpring({\r\n      isPan: true,\r\n      start: 0,\r\n      end: 1000,\r\n      velocity: 0,\r\n      dampingRatio: 1,\r\n      naturalFrequency: 40,\r\n      onUpdate: (now) => {\r\n        now /= 1000; // 0 - start, 1 - end\r\n\r\n        if (panNeedsChange || currZoomLevelNeedsChange) {\r\n          if (panNeedsChange) {\r\n            currSlide.pan.x = initialPan.x + (destinationPan.x - initialPan.x) * now;\r\n            currSlide.pan.y = initialPan.y + (destinationPan.y - initialPan.y) * now;\r\n          }\r\n\r\n          if (currZoomLevelNeedsChange) {\r\n            const newZoomLevel = prevZoomLevel\r\n                        + (destinationZoomLevel - prevZoomLevel) * now;\r\n            currSlide.setZoomLevel(newZoomLevel);\r\n          }\r\n\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n\r\n        // Restore background opacity\r\n        if (restoreBgOpacity && pswp.bgOpacity < 1) {\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * now, 0, 1\r\n          ));\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        // update resolution after transition ends\r\n        currSlide._setResolution(destinationZoomLevel);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    });\r\n  }\r\n}\n\n/**\r\n * Tap, double-tap handler.\r\n */\r\n\r\n/**\r\n * Whether the tap was performed on the main slide\r\n * (rather than controls or caption).\r\n *\r\n * @param {Event} event\r\n */\r\nfunction didTapOnMainContent(event) {\r\n  return !!(event.target.closest('.pswp__container'));\r\n}\r\n\r\nclass TapHandler {\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n  }\r\n\r\n\r\n  click(point, originalEvent) {\r\n    const targetClassList = originalEvent.target.classList;\r\n    const isImageClick = targetClassList.contains('pswp__img');\r\n    const isBackgroundClick = targetClassList.contains('pswp__item')\r\n                              || targetClassList.contains('pswp__zoom-wrap');\r\n\r\n    if (isImageClick) {\r\n      this._doClickOrTapAction('imageClick', point, originalEvent);\r\n    } else if (isBackgroundClick) {\r\n      this._doClickOrTapAction('bgClick', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  tap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('tap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  doubleTap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('doubleTap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  _doClickOrTapAction(actionName, point, originalEvent) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    const optionValue = pswp.options[actionName + 'Action'];\r\n\r\n    if (pswp.dispatch(actionName + 'Action', { point, originalEvent }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      optionValue.call(pswp, point, originalEvent);\r\n      return;\r\n    }\r\n\r\n    switch (optionValue) {\r\n      case 'close':\r\n      case 'next':\r\n        pswp[optionValue]();\r\n        break;\r\n      case 'zoom':\r\n        currSlide.toggleZoom(point);\r\n        break;\r\n      case 'zoom-or-close':\r\n        // by default click zooms current image,\r\n        // if it can not be zoomed - gallery will be closed\r\n        if (currSlide.isZoomable()\r\n            && currSlide.zoomLevels.secondary !== currSlide.zoomLevels.initial) {\r\n          currSlide.toggleZoom(point);\r\n        } else if (pswp.options.clickToCloseNonZoomable) {\r\n          pswp.close();\r\n        }\r\n        break;\r\n      case 'toggle-controls':\r\n        this.gestures.pswp.element.classList.toggle('pswp--ui-visible');\r\n        // if (_controlsVisible) {\r\n        //   _ui.hideControls();\r\n        // } else {\r\n        //   _ui.showControls();\r\n        // }\r\n        break;\r\n    }\r\n  }\r\n}\n\n/**\r\n * Gestures class bind touch, pointer or mouse events\r\n * and emits drag to drag-handler and zoom events zoom-handler.\r\n *\r\n * Drag and zoom events are emited in requestAnimationFrame,\r\n * and only when one of pointers was actually changed.\r\n */\r\n\r\n// How far should user should drag\r\n// until we can determine that the gesture is swipe and its direction\r\nconst AXIS_SWIPE_HYSTERISIS = 10;\r\n//const PAN_END_FRICTION = 0.35;\r\n\r\nconst DOUBLE_TAP_DELAY = 300; // ms\r\nconst MIN_TAP_DISTANCE = 25; // px\r\n\r\nclass Gestures {\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n\r\n\r\n    // point objects are defined once and reused\r\n    // PhotoSwipe keeps track only of two pointers, others are ignored\r\n    this.p1 = {}; // the first pressed pointer\r\n    this.p2 = {}; // the second pressed pointer\r\n    this.prevP1 = {};\r\n    this.prevP2 = {};\r\n    this.startP1 = {};\r\n    this.startP2 = {};\r\n    this.velocity = {};\r\n\r\n    this._lastStartP1 = {};\r\n    this._intervalP1 = {};\r\n    this._numActivePoints = 0;\r\n    this._ongoingPointers = [];\r\n\r\n    this._touchEventEnabled = 'ontouchstart' in window;\r\n    this._pointerEventEnabled = !!(window.PointerEvent);\r\n    this.supportsTouch = this._touchEventEnabled\r\n                          || (this._pointerEventEnabled && navigator.maxTouchPoints > 1);\r\n\r\n    if (!this.supportsTouch) {\r\n      // disable pan to next slide for non-touch devices\r\n      pswp.options.allowPanToNext = false;\r\n    }\r\n\r\n    this.drag = new DragHandler(this);\r\n    this.zoomLevels = new ZoomHandler(this);\r\n    this.tapHandler = new TapHandler(this);\r\n\r\n    pswp.on('bindEvents', () => {\r\n      pswp.events.add(pswp.scrollWrap, 'click', e => this._onClick(e));\r\n\r\n      if (this._pointerEventEnabled) {\r\n        this._bindEvents('pointer', 'down', 'up', 'cancel');\r\n      } else if (this._touchEventEnabled) {\r\n        this._bindEvents('touch', 'start', 'end', 'cancel');\r\n\r\n        // In previous versions we also bound mouse event here,\r\n        // in case device supports both touch and mouse events,\r\n        // but newer versions of browsers now support PointerEvent.\r\n\r\n        // on iOS10 if you bind touchmove/end after touchstart,\r\n        // and you don't preventDefault touchstart (which PhotoSwipe does),\r\n        // preventDefault will have no effect on touchmove and touchend.\r\n        // Unless you bind it previously.\r\n        pswp.scrollWrap.ontouchmove = () => {}; // eslint-disable-line\r\n        pswp.scrollWrap.ontouchend = () => {}; // eslint-disable-line\r\n      } else {\r\n        this._bindEvents('mouse', 'down', 'up');\r\n      }\r\n    });\r\n  }\r\n\r\n  _bindEvents(pref, down, up, cancel) {\r\n    const { pswp } = this;\r\n    const { events } = pswp;\r\n\r\n    const cancelEvent = cancel ? pref + cancel : '';\r\n\r\n    events.add(pswp.scrollWrap, pref + down, this.onPointerDown.bind(this));\r\n    events.add(window, pref + 'move', this.onPointerMove.bind(this));\r\n    events.add(window, pref + up, this.onPointerUp.bind(this));\r\n    if (cancelEvent) {\r\n      events.add(pswp.scrollWrap, cancelEvent, this.onPointerUp.bind(this));\r\n    }\r\n  }\r\n\r\n\r\n  onPointerDown(e) {\r\n    // We do not call preventDefault for touch events\r\n    // to allow browser to show native dialog on longpress\r\n    // (the one that allows to save image or open it in new tab).\r\n    //\r\n    // Desktop Safari allows to drag images when preventDefault isn't called on mousedown,\r\n    // even though preventDefault IS called on mousemove. That's why we preventDefault mousedown.\r\n    let isMousePointer;\r\n    if (e.type === 'mousedown' || e.pointerType === 'mouse') {\r\n      isMousePointer = true;\r\n    }\r\n\r\n    // Allow dragging only via left mouse button.\r\n    // http://www.quirksmode.org/js/events_properties.html\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/event.button\r\n    if (isMousePointer && e.button > 0) {\r\n      return;\r\n    }\r\n\r\n    const { pswp } = this;\r\n\r\n    // if PhotoSwipe is opening or closing\r\n    if (!pswp.opener.isOpen) {\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (pswp.dispatch('pointerDown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (isMousePointer) {\r\n      pswp.mouseDetected();\r\n\r\n      // preventDefault mouse event to prevent\r\n      // browser image drag feature\r\n      this._preventPointerEventBehaviour(e);\r\n    }\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    this._updatePoints(e, 'down');\r\n\r\n    this.pointerDown = true;\r\n\r\n    if (this._numActivePoints === 1) {\r\n      this.dragAxis = null;\r\n      // we need to store initial point to determine the main axis,\r\n      // drag is activated only after the axis is determined\r\n      equalizePoints(this.startP1, this.p1);\r\n    }\r\n\r\n    if (this._numActivePoints > 1) {\r\n      // Tap or double tap should not trigger if more than one pointer\r\n      this._clearTapTimer();\r\n      this.isMultitouch = true;\r\n    } else {\r\n      this.isMultitouch = false;\r\n    }\r\n  }\r\n\r\n  onPointerMove(e) {\r\n    e.preventDefault(); // always preventDefault move event\r\n\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'move');\r\n\r\n    if (this.pswp.dispatch('pointerMove', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 1 && !this.isDragging) {\r\n      if (!this.dragAxis) {\r\n        this._calculateDragDirection();\r\n      }\r\n\r\n      // Drag axis was detected, emit drag.start\r\n      if (this.dragAxis && !this.isDragging) {\r\n        if (this.isZooming) {\r\n          this.isZooming = false;\r\n          this.zoomLevels.end();\r\n        }\r\n\r\n        this.isDragging = true;\r\n        this._clearTapTimer(); // Tap can not trigger after drag\r\n\r\n        // Adjust starting point\r\n        this._updateStartPoints();\r\n        this._intervalTime = Date.now();\r\n        //this._startTime = this._intervalTime;\r\n        this._velocityCalculated = false;\r\n        equalizePoints(this._intervalP1, this.p1);\r\n        this.velocity.x = 0;\r\n        this.velocity.y = 0;\r\n        this.drag.start();\r\n\r\n        this._rafStopLoop();\r\n        this._rafRenderLoop();\r\n      }\r\n    } else if (this._numActivePoints > 1 && !this.isZooming) {\r\n      this._finishDrag();\r\n\r\n      this.isZooming = true;\r\n\r\n      // Adjust starting points\r\n      this._updateStartPoints();\r\n\r\n      this.zoomLevels.start();\r\n\r\n      this._rafStopLoop();\r\n      this._rafRenderLoop();\r\n    }\r\n  }\r\n\r\n  _finishDrag() {\r\n    if (this.isDragging) {\r\n      this.isDragging = false;\r\n\r\n      // Try to calculate velocity,\r\n      // if it wasn't calculated yet in drag.change\r\n      if (!this._velocityCalculated) {\r\n        this._updateVelocity(true);\r\n      }\r\n\r\n      this.drag.end();\r\n      this.dragAxis = null;\r\n    }\r\n  }\r\n\r\n\r\n  onPointerUp(e) {\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'up');\r\n\r\n    if (this.pswp.dispatch('pointerUp', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 0) {\r\n      this.pointerDown = false;\r\n      this._rafStopLoop();\r\n\r\n      if (this.isDragging) {\r\n        this._finishDrag();\r\n      } else if (!this.isZooming && !this.isMultitouch) {\r\n        //this.zoomLevels.correctZoomPan();\r\n        this._finishTap(e);\r\n      }\r\n    }\r\n\r\n    if (this._numActivePoints < 2 && this.isZooming) {\r\n      this.isZooming = false;\r\n      this.zoomLevels.end();\r\n\r\n      if (this._numActivePoints === 1) {\r\n        // Since we have 1 point left, we need to reinitiate drag\r\n        this.dragAxis = null;\r\n        this._updateStartPoints();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  _rafRenderLoop() {\r\n    if (this.isDragging || this.isZooming) {\r\n      this._updateVelocity();\r\n\r\n      if (this.isDragging) {\r\n        // make sure that pointer moved since the last update\r\n        if (!pointsEqual(this.p1, this.prevP1)) {\r\n          this.drag.change();\r\n        }\r\n      } else /* if (this.isZooming) */ {\r\n        if (!pointsEqual(this.p1, this.prevP1)\r\n            || !pointsEqual(this.p2, this.prevP2)) {\r\n          this.zoomLevels.change();\r\n        }\r\n      }\r\n\r\n      this._updatePrevPoints();\r\n      this.raf = requestAnimationFrame(this._rafRenderLoop.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update velocity at 50ms interval\r\n   */\r\n  _updateVelocity(force) {\r\n    const time = Date.now();\r\n    const duration = time - this._intervalTime;\r\n\r\n    if (duration < 50 && !force) {\r\n      return;\r\n    }\r\n\r\n\r\n    this.velocity.x = this._getVelocity('x', duration);\r\n    this.velocity.y = this._getVelocity('y', duration);\r\n\r\n    this._intervalTime = time;\r\n    equalizePoints(this._intervalP1, this.p1);\r\n    this._velocityCalculated = true;\r\n  }\r\n\r\n  _finishTap(e) {\r\n    const { mainScroll } = this.pswp;\r\n\r\n    // Do not trigger tap events if main scroll is shifted\r\n    if (mainScroll.isShifted()) {\r\n      // restore main scroll position\r\n      // (usually happens if stopped in the middle of animation)\r\n      mainScroll.moveIndexBy(0, true);\r\n      return;\r\n    }\r\n\r\n    // Do not trigger tap for touchcancel or pointercancel\r\n    if (e.type.indexOf('cancel') > 0) {\r\n      return;\r\n    }\r\n\r\n    // Trigger click instead of tap for mouse events\r\n    if (e.type === 'mouseup' || e.pointerType === 'mouse') {\r\n      this.tapHandler.click(this.startP1, e);\r\n      return;\r\n    }\r\n\r\n    // Disable delay if there is no doubleTapAction\r\n    const tapDelay = this.pswp.options.doubleTapAction ? DOUBLE_TAP_DELAY : 0;\r\n\r\n    // If tapTimer is defined - we tapped recently,\r\n    // check if the current tap is close to the previous one,\r\n    // if yes - trigger double tap\r\n    if (this._tapTimer) {\r\n      this._clearTapTimer();\r\n      // Check if two taps were more or less on the same place\r\n      if (getDistanceBetween(this._lastStartP1, this.startP1) < MIN_TAP_DISTANCE) {\r\n        this.tapHandler.doubleTap(this.startP1, e);\r\n      }\r\n    } else {\r\n      equalizePoints(this._lastStartP1, this.startP1);\r\n      this._tapTimer = setTimeout(() => {\r\n        this.tapHandler.tap(this.startP1, e);\r\n        this._clearTapTimer();\r\n      }, tapDelay);\r\n    }\r\n  }\r\n\r\n  _clearTapTimer() {\r\n    if (this._tapTimer) {\r\n      clearTimeout(this._tapTimer);\r\n      this._tapTimer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get velocity for axis\r\n   *\r\n   * @param {Number} axis\r\n   * @param {Number} duration\r\n   */\r\n  _getVelocity(axis, duration) {\r\n    // displacement is like distance, but can be negative.\r\n    const displacement = this.p1[axis] - this._intervalP1[axis];\r\n\r\n    if (Math.abs(displacement) > 1 && duration > 5) {\r\n      return displacement / duration;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  _rafStopLoop() {\r\n    if (this.raf) {\r\n      cancelAnimationFrame(this.raf);\r\n      this.raf = null;\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  _preventPointerEventBehaviour(e) {\r\n    // TODO find a way to disable e.preventDefault on some elements\r\n    //      via event or some class or something\r\n    e.preventDefault();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Parses and normalizes points from the touch, mouse or pointer event.\r\n   * Updates p1 and p2.\r\n   *\r\n   * @param {Event} e\r\n   * @param {String} pointerType Normalized pointer type ('up', 'down' or 'move')\r\n   */\r\n  _updatePoints(e, pointerType) {\r\n    if (this._pointerEventEnabled) {\r\n      // Try to find the current pointer in ongoing pointers by its ID\r\n      const pointerIndex = this._ongoingPointers.findIndex((ongoingPoiner) => {\r\n        return ongoingPoiner.id === e.pointerId;\r\n      });\r\n\r\n      if (pointerType === 'up' && pointerIndex > -1) {\r\n        // release the pointer - remove it from ongoing\r\n        this._ongoingPointers.splice(pointerIndex, 1);\r\n      } else if (pointerType === 'down' && pointerIndex === -1) {\r\n        // add new pointer\r\n        this._ongoingPointers.push(this._convertEventPosToPoint(e, {}));\r\n      } else if (pointerIndex > -1) {\r\n        // update existing pointer\r\n        this._convertEventPosToPoint(e, this._ongoingPointers[pointerIndex]);\r\n      }\r\n\r\n      this._numActivePoints = this._ongoingPointers.length;\r\n\r\n      // update points that PhotoSwipe uses\r\n      // to calculate position and scale\r\n      if (this._numActivePoints > 0) {\r\n        equalizePoints(this.p1, this._ongoingPointers[0]);\r\n      }\r\n\r\n      if (this._numActivePoints > 1) {\r\n        equalizePoints(this.p2, this._ongoingPointers[1]);\r\n      }\r\n    } else {\r\n      this._numActivePoints = 0;\r\n      if (e.type.indexOf('touch') > -1) {\r\n        // Touch Event\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\r\n        if (e.touches && e.touches.length > 0) {\r\n          this._convertEventPosToPoint(e.touches[0], this.p1);\r\n          this._numActivePoints++;\r\n          if (e.touches.length > 1) {\r\n            this._convertEventPosToPoint(e.touches[1], this.p2);\r\n            this._numActivePoints++;\r\n          }\r\n        }\r\n      } else {\r\n        // Mouse Event\r\n        this._convertEventPosToPoint(e, this.p1);\r\n        if (pointerType === 'up') {\r\n          // clear all points on mouseup\r\n          this._numActivePoints = 0;\r\n        } else {\r\n          this._numActivePoints++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // update points that were used during previous rAF tick\r\n  _updatePrevPoints() {\r\n    equalizePoints(this.prevP1, this.p1);\r\n    equalizePoints(this.prevP2, this.p2);\r\n  }\r\n\r\n  // update points at the start of gesture\r\n  _updateStartPoints() {\r\n    equalizePoints(this.startP1, this.p1);\r\n    equalizePoints(this.startP2, this.p2);\r\n    this._updatePrevPoints();\r\n  }\r\n\r\n  _calculateDragDirection() {\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      // if main scroll position is shifted – direction is always horizontal\r\n      this.dragAxis = 'x';\r\n    } else {\r\n      // calculate delta of the last touchmove tick\r\n      const diff = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);\r\n\r\n      if (diff !== 0) {\r\n        // check if pointer was shifted horizontally or vertically\r\n        const axisToCheck = diff > 0 ? 'x' : 'y';\r\n\r\n        if (Math.abs(this.p1[axisToCheck] - this.startP1[axisToCheck]) >= AXIS_SWIPE_HYSTERISIS) {\r\n          this.dragAxis = axisToCheck;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts touch, pointer or mouse event\r\n   * to PhotoSwipe point.\r\n   *\r\n   * @param {Event} e\r\n   * @param {Point} p\r\n   */\r\n  _convertEventPosToPoint(e, p) {\r\n    p.x = e.pageX - this.pswp.offset.x;\r\n    p.y = e.pageY - this.pswp.offset.y;\r\n\r\n    // e.pointerId can be zero\r\n    if (e.pointerId !== undefined) {\r\n      p.id = e.pointerId;\r\n    } else if (e.identifier !== undefined) {\r\n      p.id = e.identifier;\r\n    }\r\n\r\n    return p;\r\n  }\r\n\r\n  _onClick(e) {\r\n    // Do not allow click event to pass through after drag\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n}\n\n/**\r\n * Handles movement of the main scrolling container\r\n * (for example, it repositions when user swipes left or right).\r\n *\r\n * Also stores its state.\r\n */\r\n\r\nconst MAIN_SCROLL_END_FRICTION = 0.35;\r\n\r\n\r\n// const MIN_SWIPE_TRANSITION_DURATION = 250;\r\n// const MAX_SWIPE_TRABSITION_DURATION = 500;\r\n// const DEFAULT_SWIPE_TRANSITION_DURATION = 333;\r\n\r\nclass MainScroll {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.x = 0;\r\n\r\n    this.resetPosition();\r\n  }\r\n\r\n  /**\r\n   * Position the scroller and slide containers\r\n   * according to viewport size.\r\n   *\r\n   * @param {Boolean} resizeSlides Whether slides content should resized\r\n   */\r\n  resize(resizeSlides) {\r\n    const { pswp } = this;\r\n    const newSlideWidth = Math.round(\r\n      pswp.viewportSize.x + pswp.viewportSize.x * pswp.options.spacing\r\n    );\r\n    // Mobile browsers might trigger a resize event during a gesture.\r\n    // (due to toolbar appearing or hiding).\r\n    // Avoid re-adjusting main scroll position if width wasn't changed\r\n    const slideWidthChanged = (newSlideWidth !== this.slideWidth);\r\n\r\n    if (slideWidthChanged) {\r\n      this.slideWidth = newSlideWidth;\r\n      this.moveTo(this.getCurrSlideX());\r\n    }\r\n\r\n    this.itemHolders.forEach((itemHolder, index) => {\r\n      if (slideWidthChanged) {\r\n        setTransform(itemHolder.el, (index + this._containerShiftIndex)\r\n                                    * this.slideWidth);\r\n      }\r\n\r\n      if (resizeSlides && itemHolder.slide) {\r\n        itemHolder.slide.resize();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reset X position of the main scroller to zero\r\n   */\r\n  resetPosition() {\r\n    // Position on the main scroller (offset)\r\n    // it is independent from slide index\r\n    this._currPositionIndex = 0;\r\n    this._prevPositionIndex = 0;\r\n\r\n    // This will force recalculation of size on next resize()\r\n    this.slideWidth = 0;\r\n\r\n    // _containerShiftIndex*viewportSize will give you amount of transform of the current slide\r\n    this._containerShiftIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Create and append array of three items\r\n   * that hold data about slides in DOM\r\n   */\r\n  appendHolders() {\r\n    this.itemHolders = [];\r\n\r\n    // append our three slide holders -\r\n    // previous, current, and next\r\n    for (let i = 0; i < 3; i++) {\r\n      const el = createElement('pswp__item', false, this.pswp.container);\r\n\r\n      // hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\r\n      el.style.display = (i === 1) ? 'block' : 'none';\r\n\r\n      this.itemHolders.push({\r\n        el,\r\n        //index: -1\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether the main scroll can be horizontally swiped to the next or previous slide.\r\n   */\r\n  canBeSwiped() {\r\n    return this.pswp.getNumItems() > 1;\r\n  }\r\n\r\n  /**\r\n   * Move main scroll by X amount of slides.\r\n   * For example:\r\n   *   `-1` will move to the previous slide,\r\n   *    `0` will reset the scroll position of the current slide,\r\n   *    `3` will move three slides forward\r\n   *\r\n   * If loop option is enabled - index will be automatically looped too,\r\n   * (for example `-1` will move to the last slide of the gallery).\r\n   *\r\n   * @param {Integer} diff\r\n   * @returns {Boolean} whether index was changed or not\r\n   */\r\n  moveIndexBy(diff, animate, velocityX) {\r\n    const { pswp } = this;\r\n    let newIndex = pswp.potentialIndex + diff;\r\n    const numSlides = pswp.getNumItems();\r\n\r\n    if (pswp.canLoop()) {\r\n      newIndex = pswp.getLoopedIndex(newIndex);\r\n      const distance = (diff + numSlides) % numSlides;\r\n      if (distance <= numSlides / 2) {\r\n        // go forward\r\n        diff = distance;\r\n      } else {\r\n        // go backwards\r\n        diff = distance - numSlides;\r\n      }\r\n    } else {\r\n      if (newIndex < 0) {\r\n        newIndex = 0;\r\n      } else if (newIndex >= numSlides) {\r\n        newIndex = numSlides - 1;\r\n      }\r\n      diff = newIndex - pswp.potentialIndex;\r\n    }\r\n\r\n    pswp.potentialIndex = newIndex;\r\n    this._currPositionIndex -= diff;\r\n\r\n    pswp.animations.stopMainScroll();\r\n\r\n    const destinationX = this.getCurrSlideX();\r\n    if (!animate) {\r\n      this.moveTo(destinationX);\r\n      this.updateCurrItem();\r\n    } else {\r\n      pswp.animations.startSpring({\r\n        isMainScroll: true,\r\n        start: this.x,\r\n        end: destinationX,\r\n        velocity: velocityX || 0,\r\n        naturalFrequency: 30,\r\n        dampingRatio: 1, //0.7,\r\n        onUpdate: (x) => {\r\n          this.moveTo(x);\r\n        },\r\n        onComplete: () => {\r\n          this.updateCurrItem();\r\n          pswp.appendHeavy();\r\n        }\r\n      });\r\n\r\n      let currDiff = pswp.potentialIndex - pswp.currIndex;\r\n      if (pswp.canLoop()) {\r\n        const currDistance = (currDiff + numSlides) % numSlides;\r\n        if (currDistance <= numSlides / 2) {\r\n          // go forward\r\n          currDiff = currDistance;\r\n        } else {\r\n          // go backwards\r\n          currDiff = currDistance - numSlides;\r\n        }\r\n      }\r\n\r\n      // Force-append new slides during transition\r\n      // if difference between slides is more than 1\r\n      if (Math.abs(currDiff) > 1) {\r\n        this.updateCurrItem();\r\n      }\r\n    }\r\n\r\n    if (diff) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * X position of the main scroll for the current slide\r\n   * (ignores position during dragging)\r\n   */\r\n  getCurrSlideX() {\r\n    return this.slideWidth * this._currPositionIndex;\r\n  }\r\n\r\n  /**\r\n   * Whether scroll position is shifted.\r\n   * For example, it will return true if the scroll is being dragged or animated.\r\n   */\r\n  isShifted() {\r\n    return this.x !== this.getCurrSlideX();\r\n  }\r\n\r\n  /**\r\n   * Update slides X positions and set their content\r\n   */\r\n  updateCurrItem() {\r\n    const { pswp } = this;\r\n    const positionDifference = this._prevPositionIndex - this._currPositionIndex;\r\n\r\n    if (!positionDifference) {\r\n      return;\r\n    }\r\n\r\n    this._prevPositionIndex = this._currPositionIndex;\r\n\r\n    pswp.currIndex = pswp.potentialIndex;\r\n\r\n    let diffAbs = Math.abs(positionDifference);\r\n    let tempHolder;\r\n\r\n    if (diffAbs >= 3) {\r\n      this._containerShiftIndex += positionDifference + (positionDifference > 0 ? -3 : 3);\r\n      diffAbs = 3;\r\n    }\r\n\r\n    for (let i = 0; i < diffAbs; i++) {\r\n      if (positionDifference > 0) {\r\n        tempHolder = this.itemHolders.shift();\r\n        this.itemHolders[2] = tempHolder; // move first to last\r\n\r\n        this._containerShiftIndex++;\r\n\r\n        setTransform(tempHolder.el, (this._containerShiftIndex + 2) * this.slideWidth);\r\n\r\n        pswp.setContent(tempHolder, (pswp.currIndex - diffAbs) + i + 2);\r\n      } else {\r\n        tempHolder = this.itemHolders.pop();\r\n        this.itemHolders.unshift(tempHolder); // move last to first\r\n\r\n        this._containerShiftIndex--;\r\n\r\n        setTransform(tempHolder.el, this._containerShiftIndex * this.slideWidth);\r\n\r\n        pswp.setContent(tempHolder, (pswp.currIndex + diffAbs) - i - 2);\r\n      }\r\n    }\r\n\r\n    // Reset transfrom every 50ish navigations in one direction.\r\n    //\r\n    // Otherwise transform will keep growing indefinitely,\r\n    // which might cause issues as browsers have a maximum transform limit.\r\n    // I wasn't able to reach it, but just to be safe.\r\n    // This should not cause noticable lag.\r\n    if (Math.abs(this._containerShiftIndex) > 50 && !this.isShifted()) {\r\n      this.resetPosition();\r\n      this.resize();\r\n    }\r\n\r\n    // Pan transition might be running (and consntantly updating pan position)\r\n    pswp.animations.stopAllPan();\r\n\r\n    this.itemHolders.forEach((itemHolder, i) => {\r\n      if (itemHolder.slide) {\r\n        // Slide in the 2nd holder is always active\r\n        itemHolder.slide.setIsActive(i === 1);\r\n      }\r\n    });\r\n\r\n    pswp.currSlide = this.itemHolders[1].slide;\r\n    pswp.contentLoader.updateLazy(positionDifference);\r\n\r\n    pswp.currSlide.applyCurrentZoomPan();\r\n    pswp.dispatch('change');\r\n  }\r\n\r\n  /**\r\n   * Move the X position of the main scroll container\r\n   *\r\n   * @param {Number} x\r\n   * @param {Boolean} dragging\r\n   */\r\n  moveTo(x, dragging) {\r\n    let newSlideIndexOffset;\r\n    let delta;\r\n\r\n    if (!this.pswp.canLoop() && dragging) {\r\n      // Apply friction\r\n      newSlideIndexOffset = ((this.slideWidth * this._currPositionIndex) - x) / this.slideWidth;\r\n      newSlideIndexOffset += this.pswp.currIndex;\r\n      delta = Math.round(x - this.x);\r\n\r\n      if ((newSlideIndexOffset < 0 && delta > 0)\r\n          || (newSlideIndexOffset >= this.pswp.getNumItems() - 1 && delta < 0)) {\r\n        x = this.x + (delta * MAIN_SCROLL_END_FRICTION);\r\n      }\r\n    }\r\n\r\n    this.x = x;\r\n    setTransform(this.pswp.container, x);\r\n\r\n    this.pswp.dispatch('moveMainScroll', { x, dragging });\r\n  }\r\n}\n\n/**\r\n *\r\n * keyboard.js\r\n *\r\n * - Manages keyboard shortcuts.\r\n * - Heps trap focus within photoswipe.\r\n *\r\n */\r\n\r\nclass Keyboard {\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n\r\n    pswp.on('bindEvents', () => {\r\n      // Dialog was likely opened by keyboard if initial point is not defined\r\n      if (!pswp.options.initialPointerPos) {\r\n        // focus causes layout,\r\n        // which causes lag during the animation,\r\n        // that's why we delay it until the opener transition ends\r\n        this._focusRoot();\r\n      }\r\n\r\n      pswp.events.add(document, 'focusin', this._onFocusIn.bind(this));\r\n      pswp.events.add(document, 'keydown', this._onKeyDown.bind(this));\r\n    });\r\n\r\n    const lastActiveElement = document.activeElement;\r\n    pswp.on('destroy', () => {\r\n      if (pswp.options.returnFocus\r\n          && lastActiveElement\r\n          && this._wasFocused) {\r\n        lastActiveElement.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  _focusRoot() {\r\n    if (!this._wasFocused) {\r\n      this.pswp.element.focus();\r\n      this._wasFocused = true;\r\n    }\r\n  }\r\n\r\n  _onKeyDown(e) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('keydown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (specialKeyUsed(e)) {\r\n      // don't do anything if special key pressed\r\n      // to prevent from overriding default browser actions\r\n      // for example, in Chrome on Mac cmd+arrow-left returns to previous page\r\n      return;\r\n    }\r\n\r\n    let keydownAction;\r\n    let axis;\r\n    let isForward;\r\n\r\n    switch (e.keyCode) {\r\n      case 27: // esc\r\n        if (pswp.options.escKey) {\r\n          keydownAction = 'close';\r\n        }\r\n        break;\r\n      case 90: // z key\r\n        keydownAction = 'toggleZoom';\r\n        break;\r\n      case 37: // left\r\n        axis = 'x';\r\n        break;\r\n      case 38: // top\r\n        axis = 'y';\r\n        break;\r\n      case 39: // right\r\n        axis = 'x';\r\n        isForward = true;\r\n        break;\r\n      case 40: // bottom\r\n        isForward = true;\r\n        axis = 'y';\r\n        break;\r\n      case 9: // tab\r\n        this._focusRoot();\r\n        break;\r\n    }\r\n\r\n    // if left/right/top/bottom key\r\n    if (axis) {\r\n      // prevent page scroll\r\n      e.preventDefault();\r\n\r\n      const { currSlide } = pswp;\r\n\r\n      if (pswp.options.arrowKeys\r\n          && axis === 'x'\r\n          && pswp.getNumItems() > 1) {\r\n        keydownAction = isForward ? 'next' : 'prev';\r\n      } else if (currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.fit) {\r\n        // up/down arrow keys pan the image vertically\r\n        // left/right arrow keys pan horizontally.\r\n        // Unless there is only one image,\r\n        // or arrowKeys option is disabled\r\n        currSlide.pan[axis] += isForward ? -80 : 80;\r\n        currSlide.panTo(currSlide.pan.x, currSlide.pan.y);\r\n      }\r\n    }\r\n\r\n    if (keydownAction) {\r\n      e.preventDefault();\r\n      pswp[keydownAction]();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trap focus inside photoswipe\r\n   *\r\n   * @param {Event} e\r\n   */\r\n  _onFocusIn(e) {\r\n    const { template } = this.pswp;\r\n    if (document !== e.target\r\n        && template !== e.target\r\n        && !template.contains(e.target)) {\r\n      // focus root element\r\n      template.focus();\r\n    }\r\n  }\r\n}\n\n/**\r\n * Runs CSS transition.\r\n */\r\n\r\nconst DEFAULT_EASING = 'cubic-bezier(.4,0,.22,1)';\r\n\r\nclass CSSAnimation {\r\n  // onComplete can be unpredictable, be careful about current state\r\n  constructor(props) {\r\n    this.props = props;\r\n    const {\r\n      target,\r\n      onComplete,\r\n      transform,\r\n      // opacity\r\n    } = props;\r\n\r\n    let {\r\n      duration,\r\n      easing,\r\n    } = props;\r\n\r\n    // support only transform and opacity\r\n    const prop = transform ? 'transform' : 'opacity';\r\n    const propValue = props[prop];\r\n\r\n    this._target = target;\r\n    this._onComplete = onComplete;\r\n\r\n    duration = duration || 333;\r\n    easing = easing || DEFAULT_EASING;\r\n\r\n    this._onTransitionEnd = this._onTransitionEnd.bind(this);\r\n\r\n    // Using timeout hack to make sure that animation\r\n    // starts even if the animated property was changed recently,\r\n    // otherwise transitionend might not fire or transiton won't start.\r\n    // https://drafts.csswg.org/css-transitions/#starting\r\n    //\r\n    // ¯\\_(ツ)_/¯\r\n    this._firstFrameTimeout = setTimeout(() => {\r\n      setTransitionStyle(target, prop, duration, easing);\r\n      this._firstFrameTimeout = setTimeout(() => {\r\n        target.addEventListener('transitionend', this._onTransitionEnd, false);\r\n        target.addEventListener('transitioncancel', this._onTransitionEnd, false);\r\n        target.style[prop] = propValue;\r\n      }, 30); // Do not reduce this number\r\n    }, 0);\r\n  }\r\n\r\n  _onTransitionEnd(e) {\r\n    if (e.target === this._target) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n\r\n  _finalizeAnimation() {\r\n    if (!this._finished) {\r\n      this._finished = true;\r\n      this.onFinish();\r\n      if (this._onComplete) {\r\n        this._onComplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._firstFrameTimeout) {\r\n      clearTimeout(this._firstFrameTimeout);\r\n    }\r\n    removeTransitionStyle(this._target);\r\n    this._target.removeEventListener('transitionend', this._onTransitionEnd, false);\r\n    this._target.removeEventListener('transitioncancel', this._onTransitionEnd, false);\r\n    if (!this._finished) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n}\n\n/**\r\n * Spring easing helper\r\n */\r\n\r\nconst DEFAULT_NATURAL_FREQUENCY = 12;\r\nconst DEFAULT_DAMPING_RATIO = 0.75;\r\n\r\nclass SpringEaser {\r\n  /**\r\n   * @param {Number} initialVelocity Initial velocity, px per ms.\r\n   *\r\n   * @param {Number} dampingRatio Determines how bouncy animation will be.\r\n   *                              From 0 to 1, 0 - always overshoot, 1 - do not overshoot.\r\n   *                              \"overshoot\" refers to part of animation that\r\n   *                              goes beyond the final value.\r\n   *\r\n   * @param {Number} naturalFrequency Determines how fast animation will slow down.\r\n   *                                  The higher value - the stiffer the transition will be,\r\n   *                                  and the faster it will slow down.\r\n   *                                  Recommended value from 10 to 50\r\n   */\r\n  constructor(initialVelocity, dampingRatio, naturalFrequency) {\r\n    this.velocity = initialVelocity * 1000; // convert to \"pixels per second\"\r\n\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    this._dampingRatio = dampingRatio || DEFAULT_DAMPING_RATIO;\r\n\r\n    // https://en.wikipedia.org/wiki/Natural_frequency\r\n    this._naturalFrequency = naturalFrequency || DEFAULT_NATURAL_FREQUENCY;\r\n\r\n    if (this._dampingRatio < 1) {\r\n      this._dampedFrequency = this._naturalFrequency\r\n                         * Math.sqrt(1 - this._dampingRatio * this._dampingRatio);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Number} deltaPosition Difference between current and end position of the animation\r\n   * @param {Number} deltaTime Frame duration in milliseconds\r\n   *\r\n   * @returns {Number} Displacement, relative to the end position.\r\n   */\r\n  easeFrame(deltaPosition, deltaTime) {\r\n    // Inspired by Apple Webkit and Android spring function implementation\r\n    // https://en.wikipedia.org/wiki/Oscillation\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    // we ignore mass (assume that it's 1kg)\r\n\r\n    let displacement = 0;\r\n    let coeff;\r\n\r\n    deltaTime /= 1000;\r\n\r\n    const naturalDumpingPow = Math.E ** (-this._dampingRatio * this._naturalFrequency * deltaTime);\r\n\r\n    if (this._dampingRatio === 1) {\r\n      coeff = this.velocity + this._naturalFrequency * deltaPosition;\r\n\r\n      displacement = (deltaPosition + coeff * deltaTime) * naturalDumpingPow;\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency) + coeff\r\n                        * naturalDumpingPow;\r\n    } else if (this._dampingRatio < 1) {\r\n      coeff = (1 / this._dampedFrequency)\r\n                * (this._dampingRatio * this._naturalFrequency * deltaPosition + this.velocity);\r\n\r\n      const dumpedFCos = Math.cos(this._dampedFrequency * deltaTime);\r\n      const dumpedFSin = Math.sin(this._dampedFrequency * deltaTime);\r\n\r\n      displacement = naturalDumpingPow\r\n                       * (deltaPosition * dumpedFCos + coeff * dumpedFSin);\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency)\r\n                        * this._dampingRatio\r\n                        + naturalDumpingPow\r\n                        * (-this._dampedFrequency * deltaPosition * dumpedFSin\r\n                        + this._dampedFrequency * coeff * dumpedFCos);\r\n    }\r\n\r\n    // Overdamped (>1) damping ratio is not supported\r\n\r\n    return displacement;\r\n  }\r\n}\n\nclass SpringAnimation {\r\n  constructor(props) {\r\n    this.props = props;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      velocity,\r\n      onUpdate,\r\n      onComplete,\r\n      onFinish,\r\n      dampingRatio,\r\n      naturalFrequency\r\n    } = props;\r\n\r\n    const easer = new SpringEaser(velocity, dampingRatio, naturalFrequency);\r\n    let prevTime = Date.now();\r\n    let deltaPosition = start - end;\r\n\r\n    this._onFinish = onFinish;\r\n\r\n    const animationLoop = () => {\r\n      if (this._raf) {\r\n        deltaPosition = easer.easeFrame(deltaPosition, Date.now() - prevTime);\r\n\r\n        // Stop the animation if velocity is low and position is close to end\r\n        if (Math.abs(deltaPosition) < 1 && Math.abs(easer.velocity) < 50) {\r\n          // Finalize the animation\r\n          onUpdate(end);\r\n          if (onComplete) {\r\n            onComplete();\r\n          }\r\n          this.onFinish();\r\n        } else {\r\n          prevTime = Date.now();\r\n          onUpdate(deltaPosition + end);\r\n          this._raf = requestAnimationFrame(animationLoop);\r\n        }\r\n      }\r\n    };\r\n\r\n    this._raf = requestAnimationFrame(animationLoop);\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._raf >= 0) {\r\n      cancelAnimationFrame(this._raf);\r\n    }\r\n    this._raf = null;\r\n  }\r\n}\n\n/**\r\n * Manages animations\r\n */\r\n\r\nclass Animations {\r\n  constructor() {\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  startSpring(props) {\r\n    this._start(props, true);\r\n  }\r\n\r\n  startTransition(props) {\r\n    this._start(props);\r\n  }\r\n\r\n  _start(props, isSpring) {\r\n    let animation;\r\n    if (isSpring) {\r\n      animation = new SpringAnimation(props);\r\n    } else {\r\n      animation = new CSSAnimation(props);\r\n    }\r\n\r\n    this.activeAnimations.push(animation);\r\n    animation.onFinish = () => this.stop(animation);\r\n\r\n    return animation;\r\n  }\r\n\r\n  stop(animation) {\r\n    animation.destroy();\r\n    const index = this.activeAnimations.indexOf(animation);\r\n    if (index > -1) {\r\n      this.activeAnimations.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  stopAll() { // _stopAllAnimations\r\n    this.activeAnimations.forEach((animation) => {\r\n      animation.destroy();\r\n    });\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * Stop all pan or zoom transitions\r\n   */\r\n  stopAllPan() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isPan) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  stopMainScroll() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isMainScroll) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns true if main scroll transition is running\r\n   */\r\n  // isMainScrollRunning() {\r\n  //   return this.activeAnimations.some((animation) => {\r\n  //     return animation.props.isMainScroll;\r\n  //   });\r\n  // }\r\n\r\n  /**\r\n   * Returns true if any pan or zoom transition is running\r\n   */\r\n  isPanRunning() {\r\n    return this.activeAnimations.some((animation) => {\r\n      return animation.props.isPan;\r\n    });\r\n  }\r\n}\n\n/**\r\n * Handles scroll wheel.\r\n * Can pan and zoom current slide image.\r\n */\r\nclass ScrollWheel {\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    pswp.events.add(pswp.element, 'wheel', this._onWheel.bind(this));\r\n  }\r\n\r\n  _onWheel(e) {\r\n    e.preventDefault();\r\n    const { currSlide } = this.pswp;\r\n    let { deltaX, deltaY } = e;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('wheel', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (e.ctrlKey || this.pswp.options.wheelToZoom) {\r\n      // zoom\r\n      if (currSlide.isZoomable()) {\r\n        let zoomFactor = -deltaY;\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          zoomFactor *= 0.05;\r\n        } else {\r\n          zoomFactor *= e.deltaMode ? 1 : 0.002;\r\n        }\r\n        zoomFactor = 2 ** zoomFactor;\r\n\r\n        const destZoomLevel = currSlide.currZoomLevel * zoomFactor;\r\n        currSlide.zoomTo(destZoomLevel, {\r\n          x: e.clientX,\r\n          y: e.clientY\r\n        });\r\n      }\r\n    } else {\r\n      // pan\r\n      if (currSlide.isPannable()) {\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          // 18 - average line height\r\n          deltaX *= 18;\r\n          deltaY *= 18;\r\n        }\r\n\r\n        currSlide.panTo(\r\n          currSlide.pan.x - deltaX,\r\n          currSlide.pan.y - deltaY\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\n\nfunction addElementHTML(htmlData) {\r\n  if (typeof htmlData === 'string') {\r\n    // Allow developers to provide full svg,\r\n    // For example:\r\n    // <svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" aria-hidden=\"true\" class=\"pswp__icn\">\r\n    //   <path d=\"...\" />\r\n    //   <circle ... />\r\n    // </svg>\r\n    // Can also be any HTML string.\r\n    return htmlData;\r\n  }\r\n\r\n  if (!htmlData || !htmlData.isCustomSVG) {\r\n    return '';\r\n  }\r\n\r\n  const svgData = htmlData;\r\n  let out = '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 %d %d\" width=\"%d\" height=\"%d\">';\r\n  out = out.split('%d').join(svgData.size || 32); // replace all %d with size\r\n\r\n  // Icons may contain outline/shadow,\r\n  // to make it we \"clone\" base icon shape and add border to it.\r\n  // Icon itself and border are styled via CSS.\r\n  //\r\n  // Property shadowID defines ID of element that should be cloned.\r\n  if (svgData.outlineID) {\r\n    out += '<use class=\"pswp__icn-shadow\" xlink:href=\"#' + svgData.outlineID + '\"/>';\r\n  }\r\n\r\n  out += svgData.inner;\r\n\r\n  out += '</svg>';\r\n\r\n  return out;\r\n}\r\n\r\nclass UIElement {\r\n  constructor(pswp, data) {\r\n    const name = data.name || data.className;\r\n    let elementHTML = data.html;\r\n\r\n    if (pswp.options[name] === false) {\r\n      // exit if element is disabled from options\r\n      return;\r\n    }\r\n\r\n    // Allow to override SVG icons from options\r\n    if (typeof pswp.options[name + 'SVG'] === 'string') {\r\n      // arrowPrevSVG\r\n      // arrowNextSVG\r\n      // closeSVG\r\n      // zoomSVG\r\n      elementHTML = pswp.options[name + 'SVG'];\r\n    }\r\n\r\n    pswp.dispatch('uiElementCreate', { data });\r\n\r\n    let className = '';\r\n    if (data.isButton) {\r\n      className += 'pswp__button ';\r\n      className += (data.className || `pswp__button--${data.name}`);\r\n    } else {\r\n      className += (data.className || `pswp__${data.name}`);\r\n    }\r\n\r\n    let element;\r\n    let tagName = data.isButton ? (data.tagName || 'button') : (data.tagName || 'div');\r\n    tagName = tagName.toLowerCase();\r\n    element = createElement(className, tagName);\r\n\r\n    if (data.isButton) {\r\n      // create button element\r\n      element = createElement(className, tagName);\r\n      if (tagName === 'button') {\r\n        element.type = 'button';\r\n      }\r\n\r\n      if (typeof pswp.options[name + 'Title'] === 'string') {\r\n        element.title = pswp.options[name + 'Title'];\r\n      } else if (data.title) {\r\n        element.title = data.title;\r\n      }\r\n    }\r\n\r\n    element.innerHTML = addElementHTML(elementHTML);\r\n\r\n    if (data.onInit) {\r\n      data.onInit(element, pswp);\r\n    }\r\n\r\n    if (data.onClick) {\r\n      element.onclick = (e) => {\r\n        if (typeof data.onClick === 'string') {\r\n          pswp[data.onClick]();\r\n        } else {\r\n          data.onClick(e, element, pswp);\r\n        }\r\n      };\r\n    }\r\n\r\n    // Top bar is default position\r\n    const appendTo = data.appendTo || 'bar';\r\n    let container;\r\n    if (appendTo === 'bar') {\r\n      if (!pswp.topBar) {\r\n        pswp.topBar = createElement('pswp__top-bar pswp__hide-on-close', false, pswp.scrollWrap);\r\n      }\r\n      container = pswp.topBar;\r\n    } else {\r\n      // element outside of top bar gets a secondary class\r\n      // that makes element fade out on close\r\n      element.classList.add('pswp__hide-on-close');\r\n\r\n      if (appendTo === 'wrapper') {\r\n        container = pswp.scrollWrap;\r\n      } else {\r\n        // root element\r\n        container = pswp.element;\r\n      }\r\n    }\r\n\r\n    container.appendChild(element);\r\n  }\r\n}\n\n/*\r\n  Backward and forward arrow buttons\r\n */\r\n\r\nfunction initArrowButton(element, pswp, isNextButton) {\r\n  element.classList.add('pswp__button--arrow');\r\n  pswp.on('change', () => {\r\n    if (!pswp.options.loop) {\r\n      if (isNextButton) {\r\n        element.disabled = !(pswp.currIndex < pswp.getNumItems() - 1);\r\n      } else {\r\n        element.disabled = !(pswp.currIndex > 0);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nconst arrowPrev = {\r\n  name: 'arrowPrev',\r\n  className: 'pswp__button--arrow--prev',\r\n  title: 'Previous',\r\n  order: 10,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<path d=\"M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z\" id=\"pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'prev',\r\n  onInit: initArrowButton\r\n};\r\n\r\nconst arrowNext = {\r\n  name: 'arrowNext',\r\n  className: 'pswp__button--arrow--next',\r\n  title: 'Next',\r\n  order: 11,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<use xlink:href=\"#pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'next',\r\n  onInit: (el, pswp) => {\r\n    initArrowButton(el, pswp, true);\r\n  }\r\n};\n\nconst closeButton = {\r\n  name: 'close',\r\n  title: 'Close',\r\n  order: 20,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    inner: '<path d=\"M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z\" id=\"pswp__icn-close\"/>',\r\n    outlineID: 'pswp__icn-close'\r\n  },\r\n  onClick: 'close'\r\n};\n\nconst zoomButton = {\r\n  name: 'zoom',\r\n  title: 'Zoom',\r\n  order: 10,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    inner: '<path d=\"M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z\" id=\"pswp__icn-zoom\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-h\" d=\"M11 16v-2h6v2z\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-v\" d=\"M13 12h2v6h-2z\"/>',\r\n    outlineID: 'pswp__icn-zoom'\r\n  },\r\n  onClick: 'toggleZoom'\r\n};\n\nconst loadingIndicator = {\r\n  name: 'preloader',\r\n  appendTo: 'bar',\r\n  order: 7,\r\n  html: {\r\n    isCustomSVG: true,\r\n    inner: '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z\" id=\"pswp__icn-loading\"/>',\r\n    outlineID: 'pswp__icn-loading'\r\n  },\r\n  onInit: (indicatorElement, pswp) => {\r\n    let isVisible;\r\n    let delayTimeout;\r\n\r\n    const toggleIndicatorClass = (className, add) => {\r\n      indicatorElement.classList[add ? 'add' : 'remove']('pswp__preloader--' + className);\r\n    };\r\n\r\n    const setIndicatorVisibility = (visible) => {\r\n      if (isVisible !== visible) {\r\n        isVisible = visible;\r\n        toggleIndicatorClass('active', visible);\r\n      }\r\n    };\r\n\r\n    const updatePreloaderVisibility = () => {\r\n      if (!pswp.currSlide.content.isLoading()) {\r\n        setIndicatorVisibility(false);\r\n        if (delayTimeout) {\r\n          clearTimeout(delayTimeout);\r\n          delayTimeout = null;\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (!delayTimeout) {\r\n        // display loading indicator with delay\r\n        delayTimeout = setTimeout(() => {\r\n          setIndicatorVisibility(pswp.currSlide.content.isLoading());\r\n          delayTimeout = null;\r\n        }, pswp.options.preloaderDelay);\r\n      }\r\n    };\r\n\r\n    pswp.on('change', updatePreloaderVisibility);\r\n\r\n    pswp.on('loadComplete', (e) => {\r\n      if (pswp.currSlide === e.slide) {\r\n        updatePreloaderVisibility();\r\n      }\r\n    });\r\n\r\n    // expose the method\r\n    pswp.ui.updatePreloaderVisibility = updatePreloaderVisibility;\r\n  }\r\n};\n\nconst counterIndicator = {\r\n  name: 'counter',\r\n  order: 5,\r\n  onInit: (counterElement, pswp) => {\r\n    pswp.on('change', () => {\r\n      counterElement.innerText = (pswp.currIndex + 1)\r\n                                  + pswp.options.indexIndicatorSep\r\n                                  + pswp.getNumItems();\r\n    });\r\n  }\r\n};\n\n/**\r\n * Set special class on element when image is zoomed.\r\n *\r\n * By default it is used to adjust\r\n * zoom icon and zoom cursor via CSS.\r\n *\r\n * @param {Boolean} isZoomedIn\r\n */\r\nfunction setZoomedIn(el, isZoomedIn) {\r\n  el.classList[isZoomedIn ? 'add' : 'remove']('pswp--zoomed-in');\r\n}\r\n\r\nclass UI {\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n  }\r\n\r\n  init() {\r\n    const { pswp } = this;\r\n    this.isRegistered = false;\r\n    this.uiElementsData = [\r\n      closeButton,\r\n      arrowPrev,\r\n      arrowNext,\r\n      zoomButton,\r\n      loadingIndicator,\r\n      counterIndicator\r\n    ];\r\n\r\n    pswp.dispatch('uiRegister');\r\n\r\n    // sort by order\r\n    this.uiElementsData.sort((a, b) => {\r\n      // default order is 0\r\n      return (a.order || 0) - (b.order || 0);\r\n    });\r\n\r\n    this.items = [];\r\n\r\n    this.isRegistered = true;\r\n    this.uiElementsData.forEach((uiElementData) => {\r\n      this.registerElement(uiElementData);\r\n    });\r\n\r\n    pswp.on('change', () => {\r\n      pswp.element.classList[pswp.getNumItems() === 1 ? 'add' : 'remove']('pswp--one-slide');\r\n    });\r\n\r\n    pswp.on('zoomPanUpdate', () => this._onZoomPanUpdate());\r\n  }\r\n\r\n  registerElement(elementData) {\r\n    if (this.isRegistered) {\r\n      this.items.push(\r\n        new UIElement(this.pswp, elementData)\r\n      );\r\n    } else {\r\n      this.uiElementsData.push(elementData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fired each time zoom or pan position is changed.\r\n   * Update classes that control visibility of zoom button and cursor icon.\r\n   */\r\n  _onZoomPanUpdate() {\r\n    const { template, currSlide, options } = this.pswp;\r\n    let { currZoomLevel } = currSlide;\r\n\r\n    if (this.pswp.opener.isClosing) {\r\n      return;\r\n    }\r\n\r\n    // if not open yet - check against initial zoom level\r\n    if (!this.pswp.opener.isOpen) {\r\n      currZoomLevel = currSlide.zoomLevels.initial;\r\n    }\r\n\r\n    if (currZoomLevel === this._lastUpdatedZoomLevel) {\r\n      return;\r\n    }\r\n    this._lastUpdatedZoomLevel = currZoomLevel;\r\n\r\n    const currZoomLevelDiff = currSlide.zoomLevels.initial - currSlide.zoomLevels.secondary;\r\n\r\n    // Initial and secondary zoom levels are almost equal\r\n    if (Math.abs(currZoomLevelDiff) < 0.01 || !currSlide.isZoomable()) {\r\n      // disable zoom\r\n      setZoomedIn(template, false);\r\n      template.classList.remove('pswp--zoom-allowed');\r\n      return;\r\n    }\r\n\r\n    template.classList.add('pswp--zoom-allowed');\r\n    const secondaryIsHigher = (currZoomLevelDiff < 0);\r\n\r\n    if (currZoomLevel === currSlide.zoomLevels.secondary) {\r\n      setZoomedIn(template, secondaryIsHigher);\r\n    } else if (currZoomLevel > currSlide.zoomLevels.secondary) {\r\n      setZoomedIn(template, true);\r\n    } else {\r\n      //  if (currZoomLevel < currSlide.zoomLevels.secondary)\r\n      setZoomedIn(template, false);\r\n    }\r\n\r\n    if (options.imageClickAction === 'zoom'\r\n        || options.imageClickAction === 'zoom-or-close') {\r\n      template.classList.add('pswp--click-to-zoom');\r\n    }\r\n  }\r\n}\n\nfunction getBoundsByElement(el) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n  return {\r\n    x: thumbAreaRect.left,\r\n    y: thumbAreaRect.top,\r\n    w: thumbAreaRect.width\r\n  };\r\n}\r\n\r\nfunction getCroppedBoundsByElement(el, imageWidth, imageHeight) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n\r\n  // fill image into the area\r\n  // (do they same as object-fit:cover does to retrieve coordinates)\r\n  const hRatio = thumbAreaRect.width / imageWidth;\r\n  const vRatio = thumbAreaRect.height / imageHeight;\r\n  const fillZoomLevel = hRatio > vRatio ? hRatio : vRatio;\r\n\r\n  const offsetX = (thumbAreaRect.width - imageWidth * fillZoomLevel) / 2;\r\n  const offsetY = (thumbAreaRect.height - imageHeight * fillZoomLevel) / 2;\r\n\r\n  // Coordinates of the image,\r\n  // as if it was not cropped,\r\n  // height is calculated automatically\r\n  const bounds = {\r\n    x: thumbAreaRect.left + offsetX,\r\n    y: thumbAreaRect.top + offsetY,\r\n    w: imageWidth * fillZoomLevel\r\n  };\r\n\r\n  // Coordinates of inner crop area\r\n  // relative to the image\r\n  bounds.innerRect = {\r\n    w: thumbAreaRect.width,\r\n    h: thumbAreaRect.height,\r\n    x: offsetX,\r\n    y: offsetY\r\n  };\r\n\r\n  return bounds;\r\n}\r\n\r\n/**\r\n * Get dimensions of thumbnail image\r\n * (click on which opens photoswipe or closes photoswipe to)\r\n *\r\n * @param {Integer} index\r\n * @param {Object} itemData\r\n * @param {PhotoSwipe} instance PhotoSwipe instance\r\n * @returns Object|undefined\r\n */\r\nfunction getThumbBounds(index, itemData, instance) {\r\n  // legacy event, before filters were introduced\r\n  const event = instance.dispatch('thumbBounds', {\r\n    index,\r\n    itemData,\r\n    instance\r\n  });\r\n  if (event.thumbBounds) {\r\n    return event.thumbBounds;\r\n  }\r\n\r\n  const { element } = itemData;\r\n  let thumbBounds;\r\n  let thumbnail;\r\n\r\n  if (element && instance.options.thumbSelector !== false) {\r\n    const thumbSelector = instance.options.thumbSelector || 'img';\r\n    thumbnail = element.matches(thumbSelector)\r\n      ? element : element.querySelector(thumbSelector);\r\n  }\r\n\r\n  thumbnail = instance.applyFilters('thumbEl', thumbnail, itemData, index);\r\n\r\n  if (thumbnail) {\r\n    if (!itemData.thumbCropped) {\r\n      thumbBounds = getBoundsByElement(thumbnail);\r\n    } else {\r\n      thumbBounds = getCroppedBoundsByElement(\r\n        thumbnail,\r\n        itemData.w,\r\n        itemData.h\r\n      );\r\n    }\r\n  }\r\n\r\n  return instance.applyFilters('thumbBounds', thumbBounds, itemData, index);\r\n}\n\n/**\r\n * Base PhotoSwipe event object\r\n */\r\nclass PhotoSwipeEvent {\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    this._listeners = {};\r\n    this._filters = {};\r\n  }\r\n\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name].push({ fn, priority });\r\n    this._filters[name].sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    if (this.pswp) {\r\n      this.pswp.addFilter(name, fn, priority);\r\n    }\r\n  }\r\n\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  applyFilters(name, ...args) {\r\n    if (this._filters[name]) {\r\n      this._filters[name].forEach((filter) => {\r\n        args[0] = filter.fn.apply(this, args);\r\n      });\r\n    }\r\n    return args[0];\r\n  }\r\n\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name].push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    if (this.pswp) {\r\n      this.pswp.on(name, fn);\r\n    }\r\n  }\r\n\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.off(name, fn);\r\n    }\r\n  }\r\n\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = new PhotoSwipeEvent(name, details);\r\n\r\n    if (!this._listeners) {\r\n      return event;\r\n    }\r\n\r\n    if (this._listeners[name]) {\r\n      this._listeners[name].forEach((listener) => {\r\n        listener.call(this, event);\r\n      });\r\n    }\r\n\r\n    return event;\r\n  }\r\n}\n\nclass Placeholder {\r\n  /**\r\n   * @param {String|false} imageSrc\r\n   * @param {Element} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : '',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      this.element.decoding = 'async';\r\n      this.element.alt = '';\r\n      this.element.src = imageSrc;\r\n      this.element.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hiden', 'true');\r\n  }\r\n\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\n\nclass Content {\r\n  /**\r\n   * @param {Object} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {Slide|undefined} slide Slide that requested the image,\r\n   *                                can be undefined if image was requested by something else\r\n   *                                (for example by lazy-loader)\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = null;\r\n        }\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {Boolean} isLazy\r\n   */\r\n  load(isLazy, reload) {\r\n    if (!this.placeholder && this.slide && this.usePlaceholder()) {\r\n      // use   -based placeholder only for the first slide,\r\n      // as rendering (even small stretched thumbnail) is an expensive operation\r\n      const placeholderSrc = this.instance.applyFilters(\r\n        'placeholderSrc',\r\n        (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n        this\r\n      );\r\n      this.placeholder = new Placeholder(\r\n        placeholderSrc,\r\n        this.slide.container\r\n      );\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.loadImage(isLazy);\r\n    } else {\r\n      this.element = createElement('pswp__content');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {Boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    this.element = createElement('pswp__img', 'img');\r\n\r\n    if (this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.data.srcset) {\r\n      this.element.srcset = this.data.srcset;\r\n    }\r\n\r\n    this.element.src = this.data.src;\r\n\r\n    this.element.alt = this.data.alt || '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (this.element.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      this.element.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      this.element.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.slide.container.innerHTML = '';\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch('contentResize', { content: this, width, height }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const image = this.element;\r\n      // Handle srcset sizes attribute.\r\n      //\r\n      // Never lower quality, if it was increased previously.\r\n      // Chrome does this automatically, Firefox and Safari do not,\r\n      // so we store largest used size in dataset.\r\n      if (image.srcset\r\n          && (!image.dataset.largestUsedSize || width > image.dataset.largestUsedSize)) {\r\n        image.sizes = width + 'px';\r\n        image.dataset.largestUsedSize = width;\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch('imageSizeChange', { slide: this.slide, width, height, content: this });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   *\r\n   * @param {Boolean} isLazy\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = null;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg');\r\n      errorMsgEl.innerText = this.instance.options.errorMsg;\r\n      errorMsgEl = this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      );\r\n      this.element = createElement('pswp__content pswp__error-msg-container');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerHTML = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      if (this.slide\r\n          && !this.slide.isActive\r\n          && ('decode' in this.element)) {\r\n        this.isDecoding = true;\r\n        // Make sure that we start decoding on the next frame\r\n        requestAnimationFrame(() => {\r\n          // element might change\r\n          if (this.element && this.element.tagName === 'IMG') {\r\n            this.element.decode().then(() => {\r\n              this.isDecoding = false;\r\n              requestAnimationFrame(() => {\r\n                this.appendImage();\r\n              });\r\n            }).catch(() => {\r\n              this.isDecoding = false;\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        if (this.placeholder\r\n          && (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR)) {\r\n          this.removePlaceholder();\r\n        }\r\n        this.appendImage();\r\n      }\r\n    } else if (this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.slide) {\r\n      if (this.isImageContent() && this.isDecoding) {\r\n        // add image to slide when it becomes active,\r\n        // even if it's not finished decoding\r\n        this.appendImage();\r\n      } else if (this.isError()) {\r\n        this.load(false, true); // try to reload\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n\r\n      if (this.placeholder\r\n        && (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR)) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n}\n\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\n\r\n\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   */\r\n  getNumItems() {\r\n    let numItems;\r\n    const { dataSource } = this.options;\r\n    if (!dataSource) {\r\n      numItems = 0;\r\n    } else if (dataSource.length) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource.gallery) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {Integer} index\r\n   */\r\n  getItemData(index) {\r\n    const { dataSource } = this.options;\r\n    let dataSourceItem;\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && dataSource.gallery) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallerySelecor and childSelector options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {Element} galleryElement\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options.children || this.options.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {Element} element DOM element\r\n   */\r\n  // eslint-disable-next-line class-methods-use-this\r\n  _domElementToItemData(element) {\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = element.tagName === 'A' ? element : element.querySelector('a');\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = parseInt(linkEl.dataset.pswpWidth, 10);\r\n      itemData.height = parseInt(linkEl.dataset.pswpHeight, 10);\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt');\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    this.applyFilters('domItemData', itemData, element, linkEl);\r\n\r\n    return itemData;\r\n  }\r\n}\n\n/**\r\n * Manages opening and closing transitions of the PhotoSwipe.\r\n *\r\n * It can perform zoom, fade or no transition.\r\n */\r\n\r\n// some browsers do not paint\r\n// elements which opacity is set to 0,\r\n// since we need to pre-render elements for the animation -\r\n// we set it to the minimum amount\r\nconst MIN_OPACITY = 0.003;\r\n\r\nclass Opener {\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isClosed = true;\r\n    this._prepareOpen = this._prepareOpen.bind(this);\r\n\r\n    // Override initial zoom and pan position\r\n    pswp.on('firstZoomPan', this._prepareOpen);\r\n  }\r\n\r\n  open() {\r\n    this._prepareOpen();\r\n    this._start();\r\n  }\r\n\r\n  close() {\r\n    if (this.isClosed || this.isClosing || this.isOpening) {\r\n      // if we close during opening animation\r\n      // for now do nothing,\r\n      // browsers aren't good at changing the direction of the CSS transition\r\n      return false;\r\n    }\r\n\r\n    const slide = this.pswp.currSlide;\r\n\r\n    this.isOpen = false;\r\n    this.isOpening = false;\r\n    this.isClosing = true;\r\n    this._duration = this.pswp.options.hideAnimationDuration;\r\n\r\n    if (slide && slide.currZoomLevel * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n      this._duration = 0;\r\n    }\r\n\r\n    this._applyStartProps();\r\n    setTimeout(() => {\r\n      this._start();\r\n    }, this._croppedZoom ? 30 : 0);\r\n\r\n    return true;\r\n  }\r\n\r\n  _prepareOpen() {\r\n    this.pswp.off('firstZoomPan', this._prepareOpen);\r\n    if (!this.isOpening) {\r\n      const slide = this.pswp.currSlide;\r\n      this.isOpening = true;\r\n      this.isClosing = false;\r\n      this._duration = this.pswp.options.showAnimationDuration;\r\n      if (slide && slide.zoomLevels.initial * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n        this._duration = 0;\r\n      }\r\n      this._applyStartProps();\r\n    }\r\n  }\r\n\r\n  _applyStartProps() {\r\n    const { pswp } = this;\r\n    const slide = this.pswp.currSlide;\r\n    const { options } = pswp;\r\n\r\n    if (options.showHideAnimationType === 'fade') {\r\n      options.showHideOpacity = true;\r\n      this._thumbBounds = false;\r\n    } else if (options.showHideAnimationType === 'none') {\r\n      options.showHideOpacity = false;\r\n      this._duration = 0;\r\n      this._thumbBounds = false;\r\n    } else if (this.isOpening && pswp._initialThumbBounds) {\r\n      // Use initial bounds if defined\r\n      this._thumbBounds = pswp._initialThumbBounds;\r\n    } else {\r\n      this._thumbBounds = this.pswp.getThumbBounds();\r\n    }\r\n\r\n    this._placeholder = slide.getPlaceholderElement();\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    // Discard animations when duration is less than 50ms\r\n    this._useAnimation = (this._duration > 50);\r\n    this._animateZoom = Boolean(this._thumbBounds)\r\n                        && (slide.content && slide.content.usePlaceholder())\r\n                        && (!this.isClosing || !pswp.mainScroll.isShifted());\r\n    if (!this._animateZoom) {\r\n      this._animateRootOpacity = true;\r\n\r\n      if (this.isOpening) {\r\n        slide.zoomAndPanToInitial();\r\n        slide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      this._animateRootOpacity = options.showHideOpacity;\r\n    }\r\n    this._animateBgOpacity = !this._animateRootOpacity && this.pswp.options.bgOpacity > MIN_OPACITY;\r\n    this._opacityElement = this._animateRootOpacity ? pswp.element : pswp.bg;\r\n\r\n    if (!this._useAnimation) {\r\n      this._duration = 0;\r\n      this._animateZoom = false;\r\n      this._animateBgOpacity = false;\r\n      this._animateRootOpacity = true;\r\n      if (this.isOpening) {\r\n        pswp.element.style.opacity = MIN_OPACITY;\r\n        pswp.applyBgOpacity(1);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this._animateZoom && this._thumbBounds.innerRect) {\r\n      // Properties are used when animation from cropped thumbnail\r\n      this._croppedZoom = true;\r\n      this._cropContainer1 = this.pswp.container;\r\n      this._cropContainer2 = this.pswp.currSlide.holderElement;\r\n\r\n      pswp.container.style.overflow = 'hidden';\r\n      pswp.container.style.width = pswp.viewportSize.x + 'px';\r\n    } else {\r\n      this._croppedZoom = false;\r\n    }\r\n\r\n    if (this.isOpening) {\r\n      // Apply styles before opening transition\r\n      if (this._animateRootOpacity) {\r\n        pswp.element.style.opacity = MIN_OPACITY;\r\n        pswp.applyBgOpacity(1);\r\n      } else {\r\n        if (this._animateBgOpacity) {\r\n          pswp.bg.style.opacity = MIN_OPACITY;\r\n        }\r\n        pswp.element.style.opacity = 1;\r\n      }\r\n\r\n      if (this._animateZoom) {\r\n        this._setClosedStateZoomPan();\r\n        if (this._placeholder) {\r\n          // tell browser that we plan to animate the placeholder\r\n          this._placeholder.willChange = 'transform';\r\n\r\n          // hide placeholder to allow hiding of\r\n          // elements that overlap it (such as icons over the thumbnail)\r\n          this._placeholder.style.opacity = MIN_OPACITY;\r\n        }\r\n      }\r\n    } else if (this.isClosing) {\r\n      // hide nearby slides to make sure that\r\n      // they are not painted during the transition\r\n      pswp.mainScroll.itemHolders[0].el.style.display = 'none';\r\n      pswp.mainScroll.itemHolders[2].el.style.display = 'none';\r\n\r\n      if (this._croppedZoom) {\r\n        if (pswp.mainScroll.x !== 0) {\r\n          // shift the main scroller to zero position\r\n          pswp.mainScroll.resetPosition();\r\n          pswp.mainScroll.resize();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _start() {\r\n    if (this.isOpening\r\n        && this._useAnimation\r\n        && this._placeholder\r\n        && this._placeholder.tagName === 'IMG') {\r\n      // To ensure smooth animation\r\n      // we wait till the current slide image placeholder is decoded,\r\n      // but no longer than 250ms,\r\n      // and no shorter than 50ms\r\n      // (just using requestanimationframe is not enough in Firefox,\r\n      // for some reason)\r\n      new Promise((resolve) => {\r\n        let decoded = false;\r\n        let isDelaying = true;\r\n        decodeImage(this._placeholder).finally(() => {\r\n          decoded = true;\r\n          if (!isDelaying) {\r\n            resolve();\r\n          }\r\n        });\r\n        setTimeout(() => {\r\n          isDelaying = false;\r\n          if (decoded) {\r\n            resolve();\r\n          }\r\n        }, 50);\r\n        setTimeout(resolve, 250);\r\n      }).finally(() => this._initiate());\r\n    } else {\r\n      this._initiate();\r\n    }\r\n  }\r\n\r\n  _initiate() {\r\n    this.pswp.element.style.setProperty('--pswp-transition-duration', this._duration + 'ms');\r\n\r\n    this.pswp.dispatch(\r\n      this.isOpening ? 'openingAnimationStart' : 'closingAnimationStart'\r\n    );\r\n\r\n    // legacy event\r\n    this.pswp.dispatch('initialZoom' + (this.isOpening ? 'In' : 'Out'));\r\n\r\n    this.pswp.element.classList[this.isOpening ? 'add' : 'remove']('pswp--ui-visible');\r\n\r\n    if (this.isOpening) {\r\n      if (this._placeholder) {\r\n        // unhide the placeholder\r\n        this._placeholder.style.opacity = 1;\r\n      }\r\n      this._animateToOpenState();\r\n    } else if (this.isClosing) {\r\n      this._animateToClosedState();\r\n    }\r\n\r\n    if (!this._useAnimation) {\r\n      this._onAnimationComplete();\r\n    }\r\n  }\r\n\r\n  _onAnimationComplete() {\r\n    const { pswp } = this;\r\n    this.isOpen = this.isOpening;\r\n    this.isClosed = this.isClosing;\r\n    this.isOpening = false;\r\n    this.isClosing = false;\r\n\r\n    pswp.dispatch(\r\n      this.isOpen ? 'openingAnimationEnd' : 'closingAnimationEnd'\r\n    );\r\n\r\n    // legacy event\r\n    pswp.dispatch('initialZoom' + (this.isOpen ? 'InEnd' : 'OutEnd'));\r\n\r\n    if (this.isClosed) {\r\n      pswp.destroy();\r\n    } else if (this.isOpen) {\r\n      if (this._animateZoom) {\r\n        pswp.container.style.overflow = 'visible';\r\n        pswp.container.style.width = '100%';\r\n      }\r\n      pswp.currSlide.applyCurrentZoomPan();\r\n    }\r\n  }\r\n\r\n  _animateToOpenState() {\r\n    const { pswp } = this;\r\n    if (this._animateZoom) {\r\n      if (this._croppedZoom) {\r\n        this._animateTo(this._cropContainer1, 'transform', 'translate3d(0,0,0)');\r\n        this._animateTo(this._cropContainer2, 'transform', 'none');\r\n      }\r\n\r\n      pswp.currSlide.zoomAndPanToInitial();\r\n      this._animateTo(\r\n        pswp.currSlide.container,\r\n        'transform',\r\n        pswp.currSlide.getCurrentTransform()\r\n      );\r\n    }\r\n\r\n    if (this._animateBgOpacity) {\r\n      this._animateTo(pswp.bg, 'opacity', pswp.options.bgOpacity);\r\n    }\r\n\r\n    if (this._animateRootOpacity) {\r\n      this._animateTo(pswp.element, 'opacity', 1);\r\n    }\r\n  }\r\n\r\n  _animateToClosedState() {\r\n    const { pswp } = this;\r\n\r\n    if (this._animateZoom) {\r\n      this._setClosedStateZoomPan(true);\r\n    }\r\n\r\n    if (this._animateBgOpacity\r\n        && pswp.bgOpacity > 0.01) { // do not animate opacity if it's already at 0\r\n      this._animateTo(pswp.bg, 'opacity', 0);\r\n    }\r\n\r\n    if (this._animateRootOpacity) {\r\n      this._animateTo(pswp.element, 'opacity', 0);\r\n    }\r\n  }\r\n\r\n  _setClosedStateZoomPan(animate) {\r\n    const { pswp } = this;\r\n    const { innerRect } = this._thumbBounds;\r\n    const { currSlide, viewportSize } = pswp;\r\n\r\n    if (this._croppedZoom) {\r\n      const containerOnePanX = -viewportSize.x + (this._thumbBounds.x - innerRect.x) + innerRect.w;\r\n      const containerOnePanY = -viewportSize.y + (this._thumbBounds.y - innerRect.y) + innerRect.h;\r\n      const containerTwoPanX = viewportSize.x - innerRect.w;\r\n      const containerTwoPanY = viewportSize.y - innerRect.h;\r\n\r\n\r\n      if (animate) {\r\n        this._animateTo(\r\n          this._cropContainer1,\r\n          'transform',\r\n          toTransformString(containerOnePanX, containerOnePanY)\r\n        );\r\n\r\n        this._animateTo(\r\n          this._cropContainer2,\r\n          'transform',\r\n          toTransformString(containerTwoPanX, containerTwoPanY)\r\n        );\r\n      } else {\r\n        setTransform(this._cropContainer1, containerOnePanX, containerOnePanY);\r\n        setTransform(this._cropContainer2, containerTwoPanX, containerTwoPanY);\r\n      }\r\n    }\r\n\r\n    equalizePoints(currSlide.pan, innerRect || this._thumbBounds);\r\n    currSlide.currZoomLevel = this._thumbBounds.w / currSlide.width;\r\n\r\n    if (animate) {\r\n      this._animateTo(currSlide.container, 'transform', currSlide.getCurrentTransform());\r\n    } else {\r\n      currSlide.applyCurrentZoomPan();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Element} target\r\n   * @param {String} prop\r\n   * @param {String} propValue\r\n   */\r\n  _animateTo(target, prop, propValue) {\r\n    if (!this._duration) {\r\n      target.style[prop] = propValue;\r\n      return;\r\n    }\r\n\r\n    const { animations } = this.pswp;\r\n    const animProps = {\r\n      duration: this._duration,\r\n      easing: this.pswp.options.easing,\r\n      onComplete: () => {\r\n        if (!animations.activeAnimations.length) {\r\n          this._onAnimationComplete();\r\n        }\r\n      },\r\n      target,\r\n    };\r\n    animProps[prop] = propValue;\r\n    animations.startTransition(animProps);\r\n  }\r\n}\n\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {Object} itemData Data about the slide\r\n * @param {PhotoSwipeBase}  instance PhotoSwipe or PhotoSwipeLightbox\r\n * @param {Integer} index\r\n * @returns {Object|Boolean} Image that is being decoded or false.\r\n */\r\nfunction lazyLoadData(itemData, instance, index) {\r\n  // src/slide/content/content.js\r\n  const content = instance.createContentFromData(itemData, index);\r\n\r\n  if (!content || !content.lazyLoad) {\r\n    return;\r\n  }\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset and we need to define sizes\r\n  const viewportSize = instance.viewportSize || getViewportSize(options);\r\n  const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n\r\n  const zoomLevel = new ZoomLevel(options, itemData, -1);\r\n  zoomLevel.update(content.width, content.height, panAreaSize);\r\n\r\n  content.lazyLoad();\r\n  content.setDisplayedSize(\r\n    Math.ceil(content.width * zoomLevel.initial),\r\n    Math.ceil(content.height * zoomLevel.initial)\r\n  );\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {Integer} index Slide index\r\n * @param {Object}  instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n */\r\nfunction lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\n\r\nclass ContentLoader {\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {Integer} diff Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  loadSlideByIndex(index) {\r\n    index = this.pswp.getLoopedIndex(index);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n\r\n    if (content) {\r\n      // assign slide to content\r\n      content.setSlide(slide);\r\n    }\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {Integer} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = null;\r\n  }\r\n}\n\nconst defaultOptions = {\r\n  allowPanToNext: true,\r\n  spacing: 0.1,\r\n  loop: true,\r\n  pinchToClose: true,\r\n  closeOnVerticalDrag: true,\r\n  hideAnimationDuration: 333,\r\n  showAnimationDuration: 333,\r\n  zoomAnimationDuration: 333,\r\n  escKey: true,\r\n  arrowKeys: true,\r\n  returnFocus: true,\r\n  maxWidthToAnimate: 4000,\r\n  clickToCloseNonZoomable: true,\r\n  imageClickAction: 'zoom-or-close',\r\n  bgClickAction: 'close',\r\n  tapAction: 'toggle-controls',\r\n  doubleTapAction: 'zoom',\r\n  indexIndicatorSep: ' / ',\r\n  preloaderDelay: 2000,\r\n  bgOpacity: 0.8,\r\n\r\n  index: 0,\r\n  errorMsg: 'The image cannot be loaded',\r\n  preload: [1, 2],\r\n  easing: 'cubic-bezier(.4,0,.22,1)'\r\n};\r\n\r\nclass PhotoSwipe extends PhotoSwipeBase {\r\n  constructor(options) {\r\n    super();\r\n\r\n    this._prepareOptions(options);\r\n\r\n    // offset of viewport relative to document\r\n    this.offset = {};\r\n\r\n    this._prevViewportSize = {};\r\n\r\n    // Size of scrollable PhotoSwipe viewport\r\n    this.viewportSize = {};\r\n\r\n    // background (backdrop) opacity\r\n    this.bgOpacity = 1;\r\n\r\n    this.events = new DOMEvents();\r\n\r\n    /** @type {Animations} */\r\n    this.animations = new Animations();\r\n\r\n    this.mainScroll = new MainScroll(this);\r\n    this.gestures = new Gestures(this);\r\n    this.opener = new Opener(this);\r\n    this.keyboard = new Keyboard(this);\r\n    this.contentLoader = new ContentLoader(this);\r\n  }\r\n\r\n  init() {\r\n    if (this.isOpen || this.isDestroying) {\r\n      return;\r\n    }\r\n\r\n    this.isOpen = true;\r\n    this.dispatch('init'); // legacy\r\n    this.dispatch('beforeOpen');\r\n\r\n    this._createMainStructure();\r\n\r\n    // add classes to the root element of PhotoSwipe\r\n    let rootClasses = 'pswp--open';\r\n    if (this.gestures.supportsTouch) {\r\n      rootClasses += ' pswp--touch';\r\n    }\r\n    if (this.options.mainClass) {\r\n      rootClasses += ' ' + this.options.mainClass;\r\n    }\r\n    this.element.className += ' ' + rootClasses;\r\n\r\n    this.currIndex = this.options.index || 0;\r\n    this.potentialIndex = this.currIndex;\r\n    this.dispatch('firstUpdate'); // starting index can be modified here\r\n\r\n    // initialize scroll wheel handler to block the scroll\r\n    this.scrollWheel = new ScrollWheel(this);\r\n\r\n    // sanitize index\r\n    if (Number.isNaN(this.currIndex)\r\n        || this.currIndex < 0\r\n        || this.currIndex >= this.getNumItems()) {\r\n      this.currIndex = 0;\r\n    }\r\n\r\n    if (!this.gestures.supportsTouch) {\r\n      // enable mouse features if no touch support detected\r\n      this.mouseDetected();\r\n    }\r\n\r\n    // causes forced synchronous layout\r\n    this.updateSize();\r\n\r\n    this.offset.y = window.pageYOffset;\r\n\r\n    this._initialItemData = this.getItemData(this.currIndex);\r\n    this.dispatch('gettingData', this.currIndex, this._initialItemData, true);\r\n\r\n    // *Layout* - calculate size and position of elements here\r\n    this._initialThumbBounds = this.getThumbBounds();\r\n    this.dispatch('initialLayout');\r\n\r\n    this.on('openingAnimationEnd', () => {\r\n      // Add content to the previous and next slide\r\n      this.setContent(this.mainScroll.itemHolders[0], this.currIndex - 1);\r\n      this.setContent(this.mainScroll.itemHolders[2], this.currIndex + 1);\r\n\r\n      this.mainScroll.itemHolders[0].el.style.display = 'block';\r\n      this.mainScroll.itemHolders[2].el.style.display = 'block';\r\n\r\n      this.appendHeavy();\r\n\r\n      this.contentLoader.updateLazy();\r\n\r\n      this.events.add(window, 'resize', this._handlePageResize.bind(this));\r\n      this.events.add(window, 'scroll', this._updatePageScrollOffset.bind(this));\r\n      this.dispatch('bindEvents');\r\n    });\r\n\r\n    // set content for center slide (first time)\r\n    this.setContent(this.mainScroll.itemHolders[1], this.currIndex);\r\n    this.dispatch('change');\r\n\r\n    this.opener.open();\r\n\r\n    this.dispatch('afterInit');\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get looped slide index\r\n   * (for example, -1 will return the last slide)\r\n   *\r\n   * @param {Integer} index\r\n   */\r\n  getLoopedIndex(index) {\r\n    const numSlides = this.getNumItems();\r\n\r\n    if (this.options.loop) {\r\n      if (index > numSlides - 1) {\r\n        index -= numSlides;\r\n      }\r\n\r\n      if (index < 0) {\r\n        index += numSlides;\r\n      }\r\n    }\r\n\r\n    index = clamp(index, 0, numSlides - 1);\r\n\r\n    return index;\r\n  }\r\n\r\n  appendHeavy() {\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      if (itemHolder.slide) {\r\n        itemHolder.slide.appendHeavy();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change the slide\r\n   * @param  {Integer} New index\r\n   */\r\n  goTo(index) {\r\n    this.mainScroll.moveIndexBy(\r\n      this.getLoopedIndex(index) - this.potentialIndex\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Go to the next slide.\r\n   */\r\n  next() {\r\n    this.goTo(this.potentialIndex + 1);\r\n  }\r\n\r\n  /**\r\n   * Go to the previous slide.\r\n   */\r\n  prev() {\r\n    this.goTo(this.potentialIndex - 1);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js zoomTo\r\n   */\r\n  zoomTo(...args) {\r\n    this.currSlide.zoomTo(...args);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js toggleZoom\r\n   */\r\n  toggleZoom() {\r\n    this.currSlide.toggleZoom();\r\n  }\r\n\r\n  /**\r\n   * Close the gallery.\r\n   * After closing transition ends - destroy it\r\n   */\r\n  close() {\r\n    if (!this.opener.isOpen || this.isDestroying) {\r\n      return;\r\n    }\r\n\r\n    this.isDestroying = true;\r\n\r\n    this.dispatch('close');\r\n\r\n    this.events.removeAll();\r\n    this.opener.close();\r\n  }\r\n\r\n  /**\r\n   * Destroys the gallery:\r\n   * - instantly closes the gallery\r\n   * - unbinds events,\r\n   * - cleans intervals and timeouts\r\n   * - removes elements from DOM\r\n   */\r\n  destroy() {\r\n    if (!this.isDestroying) {\r\n      this.options.showHideAnimationType = 'none';\r\n      this.close();\r\n      return;\r\n    }\r\n\r\n    this.dispatch('destroy');\r\n\r\n    this.listeners = null;\r\n\r\n    this.scrollWrap.ontouchmove = null;\r\n    this.scrollWrap.ontouchend = null;\r\n\r\n    this.element.remove();\r\n\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      if (itemHolder.slide) {\r\n        itemHolder.slide.destroy();\r\n      }\r\n    });\r\n\r\n    this.contentLoader.destroy();\r\n    this.events.removeAll();\r\n  }\r\n\r\n  /**\r\n   * Refresh/reload content of a slide by its index\r\n   *\r\n   * @param {Integer} slideIndex\r\n   */\r\n  refreshSlideContent(slideIndex) {\r\n    this.contentLoader.removeByIndex(slideIndex);\r\n    this.mainScroll.itemHolders.forEach((itemHolder, i) => {\r\n      let potentialHolderIndex = this.currSlide.index - 1 + i;\r\n      if (this.canLoop()) {\r\n        potentialHolderIndex = this.getLoopedIndex(potentialHolderIndex);\r\n      }\r\n      if (potentialHolderIndex === slideIndex) {\r\n        // set the new slide content\r\n        this.setContent(itemHolder, slideIndex, true);\r\n\r\n        // activate the new slide if it's current\r\n        if (i === 1) {\r\n          this.currSlide = itemHolder.slide;\r\n          itemHolder.slide.setIsActive(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.dispatch('change');\r\n  }\r\n\r\n\r\n  /**\r\n   * Set slide content\r\n   *\r\n   * @param {Object} holder mainScroll.itemHolders array item\r\n   * @param {Integer} index Slide index\r\n   * @param {Boolean} force If content should be set even if index wasn't changed\r\n   */\r\n  setContent(holder, index, force) {\r\n    if (this.canLoop()) {\r\n      index = this.getLoopedIndex(index);\r\n    }\r\n\r\n    if (holder.slide) {\r\n      if (holder.slide.index === index && !force) {\r\n        // exit if holder already contains this slide\r\n        // this could be common when just three slides are used\r\n        return;\r\n      }\r\n\r\n      // destroy previous slide\r\n      holder.slide.destroy();\r\n      holder.slide = null;\r\n    }\r\n\r\n    // exit if no loop and index is out of bounds\r\n    if (!this.canLoop() && (index < 0 || index >= this.getNumItems())) {\r\n      return;\r\n    }\r\n\r\n    const itemData = this.getItemData(index);\r\n    holder.slide = new Slide(itemData, index, this);\r\n\r\n    // set current slide\r\n    if (index === this.currIndex) {\r\n      this.currSlide = holder.slide;\r\n    }\r\n\r\n    holder.slide.append(holder.el);\r\n  }\r\n\r\n  getViewportCenterPoint() {\r\n    return {\r\n      x: this.viewportSize.x / 2,\r\n      y: this.viewportSize.y / 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update size of all elements.\r\n   * Executed on init and on page resize.\r\n   *\r\n   * @param  {Boolean} force Update size even if size of viewport was not changed.\r\n   */\r\n  updateSize(force) {\r\n    // let item;\r\n    // let itemIndex;\r\n\r\n    if (this.isDestroying) {\r\n      // exit if PhotoSwipe is closed or closing\r\n      // (to avoid errors, as resize event might be delayed)\r\n      return;\r\n    }\r\n\r\n    //const newWidth = this.scrollWrap.clientWidth;\r\n    //const newHeight = this.scrollWrap.clientHeight;\r\n\r\n    const newViewportSize = getViewportSize(this.options, this);\r\n\r\n    if (!force && pointsEqual(newViewportSize, this._prevViewportSize)) {\r\n      // Exit if dimensions were not changed\r\n      return;\r\n    }\r\n\r\n    //this._prevViewportSize.x = newWidth;\r\n    //this._prevViewportSize.y = newHeight;\r\n    equalizePoints(this._prevViewportSize, newViewportSize);\r\n\r\n    this.dispatch('beforeResize');\r\n\r\n    equalizePoints(this.viewportSize, this._prevViewportSize);\r\n\r\n    this._updatePageScrollOffset();\r\n\r\n    this.dispatch('viewportSize');\r\n\r\n    // Resize slides only after opener animation is finished\r\n    // and don't re-calculate size on inital size update\r\n    this.mainScroll.resize(this.opener.isOpen);\r\n\r\n    if (!this.hasMouse && window.matchMedia('(any-hover: hover)').matches) {\r\n      this.mouseDetected();\r\n    }\r\n\r\n    this.dispatch('resize');\r\n  }\r\n\r\n  applyBgOpacity(opacity) {\r\n    this.bgOpacity = Math.max(opacity, 0);\r\n    this.bg.style.opacity = this.bgOpacity * this.options.bgOpacity;\r\n  }\r\n\r\n  /**\r\n   * Whether mouse is detected\r\n   */\r\n  mouseDetected() {\r\n    if (!this.hasMouse) {\r\n      this.hasMouse = true;\r\n      this.element.classList.add('pswp--has_mouse');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page resize event handler\r\n   */\r\n  _handlePageResize() {\r\n    this.updateSize();\r\n\r\n    // In iOS webview, if element size depends on document size,\r\n    // it'll be measured incorrectly in resize event\r\n    //\r\n    // https://bugs.webkit.org/show_bug.cgi?id=170595\r\n    // https://hackernoon.com/onresize-event-broken-in-mobile-safari-d8469027bf4d\r\n    if (/iPhone|iPad|iPod/i.test(window.navigator.userAgent)) {\r\n      setTimeout(() => {\r\n        this.updateSize();\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page scroll offset is used\r\n   * to get correct coordinates\r\n   * relative to PhotoSwipe viewport.\r\n   */\r\n  _updatePageScrollOffset() {\r\n    this.setScrollOffset(0, window.pageYOffset);\r\n  }\r\n\r\n  setScrollOffset(x, y) {\r\n    this.offset.x = x;\r\n    this.offset.y = y;\r\n    this.dispatch('updateScrollOffset');\r\n  }\r\n\r\n  /**\r\n   * Create main HTML structure of PhotoSwipe,\r\n   * and add it to DOM\r\n   */\r\n  _createMainStructure() {\r\n    // root DOM element of PhotoSwipe (.pswp)\r\n    this.element = createElement('pswp');\r\n    this.element.setAttribute('tabindex', -1);\r\n    this.element.setAttribute('role', 'dialog');\r\n\r\n    // template is legacy prop\r\n    this.template = this.element;\r\n\r\n    // Background is added as a separate element,\r\n    // as animating opacity is faster than animating rgba()\r\n    this.bg = createElement('pswp__bg', false, this.element);\r\n    this.scrollWrap = createElement('pswp__scroll-wrap', false, this.element);\r\n    this.container = createElement('pswp__container', false, this.scrollWrap);\r\n\r\n    this.mainScroll.appendHolders();\r\n\r\n    this.ui = new UI(this);\r\n    this.ui.init();\r\n\r\n    // append to DOM\r\n    (this.options.appendToEl || document.body).appendChild(this.element);\r\n  }\r\n\r\n\r\n  /**\r\n   * Get position and dimensions of small thumbnail\r\n   *   {x:,y:,w:}\r\n   *\r\n   * Height is optional (calculated based on the large image)\r\n   */\r\n  getThumbBounds() {\r\n    return getThumbBounds(\r\n      this.currIndex,\r\n      this.currSlide ? this.currSlide.data : this._initialItemData,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * If the PhotoSwipe can have continious loop\r\n   * @returns Boolean\r\n   */\r\n  canLoop() {\r\n    return (this.options.loop && this.getNumItems() > 2);\r\n  }\r\n\r\n  _prepareOptions(options) {\r\n    if (window.matchMedia('(prefers-reduced-motion), (update: slow)').matches) {\r\n      options.showHideAnimationType = 'none';\r\n      options.zoomAnimationDuration = 0;\r\n    }\r\n\r\n    this.options = {\r\n      ...defaultOptions,\r\n      ...options\r\n    };\r\n  }\r\n}\n\nexport default PhotoSwipe;\n//# sourceMappingURL=photoswipe.esm.js.map\n","/*!\n  * PhotoSwipe Lightbox 5.2.2 - https://photoswipe.com\n  * (c) 2022 Dmytro Semenov\n  */\n/**\r\n  * Creates element and optionally appends it to another.\r\n  *\r\n  * @param {String} className\r\n  * @param {String|NULL} tagName\r\n  * @param {Element|NULL} appendToEl\r\n  */\r\nfunction createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName || 'div');\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {Number} x\r\n * @param {Number|null} y\r\n * @param {Number|null} scale\r\n */\r\nfunction toTransformString(x, y, scale) {\r\n  let propValue = 'translate3d('\r\n    + x + 'px,' + (y || 0) + 'px'\r\n    + ',0)';\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ' scale3d('\r\n      + scale + ',' + scale\r\n      + ',1)';\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n */\r\nfunction setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? (w + 'px') : w;\r\n  el.style.height = (typeof h === 'number') ? (h + 'px') : h;\r\n}\r\n\r\nconst LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {Event} e\r\n */\r\nfunction specialKeyUsed(e) {\r\n  if (e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey) {\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {Element|NodeList|String} option\r\n * @param {String|null} legacySelector\r\n * @param {Element|null} parent\r\n * @returns Element[]\r\n */\r\nfunction getElementsFromOption(option, legacySelector, parent = document) {\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * @param {*} v\r\n * @returns Boolean\r\n */\r\nfunction isClass(fn) {\r\n  return typeof fn === 'function' && /^\\s*class\\s+/.test(fn.toString());\r\n}\n\n/**\r\n * Base PhotoSwipe event object\r\n */\r\nclass PhotoSwipeEvent {\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    this._listeners = {};\r\n    this._filters = {};\r\n  }\r\n\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name].push({ fn, priority });\r\n    this._filters[name].sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    if (this.pswp) {\r\n      this.pswp.addFilter(name, fn, priority);\r\n    }\r\n  }\r\n\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  applyFilters(name, ...args) {\r\n    if (this._filters[name]) {\r\n      this._filters[name].forEach((filter) => {\r\n        args[0] = filter.fn.apply(this, args);\r\n      });\r\n    }\r\n    return args[0];\r\n  }\r\n\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name].push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    if (this.pswp) {\r\n      this.pswp.on(name, fn);\r\n    }\r\n  }\r\n\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.off(name, fn);\r\n    }\r\n  }\r\n\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = new PhotoSwipeEvent(name, details);\r\n\r\n    if (!this._listeners) {\r\n      return event;\r\n    }\r\n\r\n    if (this._listeners[name]) {\r\n      this._listeners[name].forEach((listener) => {\r\n        listener.call(this, event);\r\n      });\r\n    }\r\n\r\n    return event;\r\n  }\r\n}\n\nclass Placeholder {\r\n  /**\r\n   * @param {String|false} imageSrc\r\n   * @param {Element} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : '',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      this.element.decoding = 'async';\r\n      this.element.alt = '';\r\n      this.element.src = imageSrc;\r\n      this.element.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hiden', 'true');\r\n  }\r\n\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\n\nclass Content {\r\n  /**\r\n   * @param {Object} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {Slide|undefined} slide Slide that requested the image,\r\n   *                                can be undefined if image was requested by something else\r\n   *                                (for example by lazy-loader)\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = null;\r\n        }\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {Boolean} isLazy\r\n   */\r\n  load(isLazy, reload) {\r\n    if (!this.placeholder && this.slide && this.usePlaceholder()) {\r\n      // use   -based placeholder only for the first slide,\r\n      // as rendering (even small stretched thumbnail) is an expensive operation\r\n      const placeholderSrc = this.instance.applyFilters(\r\n        'placeholderSrc',\r\n        (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n        this\r\n      );\r\n      this.placeholder = new Placeholder(\r\n        placeholderSrc,\r\n        this.slide.container\r\n      );\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.loadImage(isLazy);\r\n    } else {\r\n      this.element = createElement('pswp__content');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {Boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    this.element = createElement('pswp__img', 'img');\r\n\r\n    if (this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.data.srcset) {\r\n      this.element.srcset = this.data.srcset;\r\n    }\r\n\r\n    this.element.src = this.data.src;\r\n\r\n    this.element.alt = this.data.alt || '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (this.element.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      this.element.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      this.element.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.slide.container.innerHTML = '';\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch('contentResize', { content: this, width, height }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const image = this.element;\r\n      // Handle srcset sizes attribute.\r\n      //\r\n      // Never lower quality, if it was increased previously.\r\n      // Chrome does this automatically, Firefox and Safari do not,\r\n      // so we store largest used size in dataset.\r\n      if (image.srcset\r\n          && (!image.dataset.largestUsedSize || width > image.dataset.largestUsedSize)) {\r\n        image.sizes = width + 'px';\r\n        image.dataset.largestUsedSize = width;\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch('imageSizeChange', { slide: this.slide, width, height, content: this });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   *\r\n   * @param {Boolean} isLazy\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = null;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg');\r\n      errorMsgEl.innerText = this.instance.options.errorMsg;\r\n      errorMsgEl = this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      );\r\n      this.element = createElement('pswp__content pswp__error-msg-container');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerHTML = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      if (this.slide\r\n          && !this.slide.isActive\r\n          && ('decode' in this.element)) {\r\n        this.isDecoding = true;\r\n        // Make sure that we start decoding on the next frame\r\n        requestAnimationFrame(() => {\r\n          // element might change\r\n          if (this.element && this.element.tagName === 'IMG') {\r\n            this.element.decode().then(() => {\r\n              this.isDecoding = false;\r\n              requestAnimationFrame(() => {\r\n                this.appendImage();\r\n              });\r\n            }).catch(() => {\r\n              this.isDecoding = false;\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        if (this.placeholder\r\n          && (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR)) {\r\n          this.removePlaceholder();\r\n        }\r\n        this.appendImage();\r\n      }\r\n    } else if (this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.slide) {\r\n      if (this.isImageContent() && this.isDecoding) {\r\n        // add image to slide when it becomes active,\r\n        // even if it's not finished decoding\r\n        this.appendImage();\r\n      } else if (this.isError()) {\r\n        this.load(false, true); // try to reload\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n\r\n      if (this.placeholder\r\n        && (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR)) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n}\n\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\n\r\n\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   */\r\n  getNumItems() {\r\n    let numItems;\r\n    const { dataSource } = this.options;\r\n    if (!dataSource) {\r\n      numItems = 0;\r\n    } else if (dataSource.length) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource.gallery) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {Integer} index\r\n   */\r\n  getItemData(index) {\r\n    const { dataSource } = this.options;\r\n    let dataSourceItem;\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && dataSource.gallery) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallerySelecor and childSelector options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {Element} galleryElement\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options.children || this.options.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {Element} element DOM element\r\n   */\r\n  // eslint-disable-next-line class-methods-use-this\r\n  _domElementToItemData(element) {\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = element.tagName === 'A' ? element : element.querySelector('a');\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = parseInt(linkEl.dataset.pswpWidth, 10);\r\n      itemData.height = parseInt(linkEl.dataset.pswpHeight, 10);\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt');\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    this.applyFilters('domItemData', itemData, element, linkEl);\r\n\r\n    return itemData;\r\n  }\r\n}\n\nfunction getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {String}  prop 'left', 'top', 'bottom', 'right'\r\n * @param {Object}  options PhotoSwipe options\r\n * @param {Object}  viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {Object}  itemData Data about the slide\r\n * @param {Integer} index Slide index\r\n * @returns {Number}\r\n */\r\nfunction parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    if (options[legacyPropName]) {\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return paddingValue || 0;\r\n}\r\n\r\n\r\nfunction getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\n\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\n\r\nconst MAX_IMAGE_WIDTH = 4000;\r\n\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {Object} options PhotoSwipe options\r\n   * @param {Object} itemData Slide data\r\n   * @param {Integer} index Slide index\r\n   * @param {PhotoSwipe|undefined} pswp PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    this.elementSize = {\r\n      x: maxWidth,\r\n      y: maxHeight\r\n    };\r\n\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = this.panAreaSize.x / this.elementSize.x;\r\n    const vRatio = this.panAreaSize.y / this.elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @param {Mixed} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    // zoom.initial\r\n    // zoom.secondary\r\n    // zoom.max\r\n    const optionValue = this.options[optionPrefix + 'ZoomLevel'];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @return {Number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @return {Number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @return {Number}\r\n   */\r\n  _getMax() {\r\n    const currZoomLevel = this._parseZoomLevelOption('max');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return Math.max(1, this.fit * 4);\r\n  }\r\n}\n\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {Object} itemData Data about the slide\r\n * @param {PhotoSwipeBase}  instance PhotoSwipe or PhotoSwipeLightbox\r\n * @param {Integer} index\r\n * @returns {Object|Boolean} Image that is being decoded or false.\r\n */\r\nfunction lazyLoadData(itemData, instance, index) {\r\n  // src/slide/content/content.js\r\n  const content = instance.createContentFromData(itemData, index);\r\n\r\n  if (!content || !content.lazyLoad) {\r\n    return;\r\n  }\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset and we need to define sizes\r\n  const viewportSize = instance.viewportSize || getViewportSize(options);\r\n  const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n\r\n  const zoomLevel = new ZoomLevel(options, itemData, -1);\r\n  zoomLevel.update(content.width, content.height, panAreaSize);\r\n\r\n  content.lazyLoad();\r\n  content.setDisplayedSize(\r\n    Math.ceil(content.width * zoomLevel.initial),\r\n    Math.ceil(content.height * zoomLevel.initial)\r\n  );\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {Integer} index Slide index\r\n * @param {Object}  instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n */\r\nfunction lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\n\n/**\r\n * PhotoSwipe lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\n\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  constructor(options) {\r\n    super();\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n  }\r\n\r\n  init() {\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp // ... if PhotoSwipe is already open\r\n        || window.navigator.onLine === false) { // ... if offline\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not ideal way to detect them.\r\n    //\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    const dataSource = {\r\n      gallery: e.currentTarget\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {Event} e click event\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = e.target;\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      e.currentTarget\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {Integer} index\r\n   * @param {Array|Object|null} dataSource\r\n   * @param {Point|null} initialPoint\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp) {\r\n      return false;\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {Integer} index\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isClass(options.pswpModule)) {\r\n      promiseArray.push(options.pswpModule);\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(options.pswpModule());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    // Pass data to PhotoSwipe and open init\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    Object.keys(this._listeners).forEach((name) => {\r\n      this._listeners[name].forEach((fn) => {\r\n        pswp.on(name, fn);\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    Object.keys(this._filters).forEach((name) => {\r\n      this._filters[name].forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = null;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = null;\r\n      window.pswp = null;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  destroy() {\r\n    if (this.pswp) {\r\n      this.pswp.destroy();\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = null;\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\n\nexport default PhotoSwipeLightbox;\n//# sourceMappingURL=photoswipe-lightbox.esm.js.map\n","/**\n * Vue 3 Carousel 0.1.38\n * (c) 2022\n * @license MIT\n */\nimport { defineComponent, ref, reactive, provide, onMounted, nextTick, onUnmounted, computed, watch, watchEffect, h, inject } from 'vue';\n\nconst defaultConfigs = {\r\n    itemsToShow: 1,\r\n    itemsToScroll: 1,\r\n    modelValue: 0,\r\n    transition: 300,\r\n    autoplay: 0,\r\n    snapAlign: 'center',\r\n    wrapAround: false,\r\n    pauseAutoplayOnHover: false,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    dir: 'ltr',\r\n    breakpoints: undefined,\r\n};\n\n/**\r\n * return a debounced version of the function\r\n * @param fn\r\n * @param delay\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nfunction debounce(fn, delay) {\r\n    let timerId;\r\n    return function (...args) {\r\n        if (timerId) {\r\n            clearTimeout(timerId);\r\n        }\r\n        timerId = setTimeout(() => {\r\n            fn(...args);\r\n            timerId = null;\r\n        }, delay);\r\n    };\r\n}\r\n/**\r\n * return a throttle version of the function\r\n * Throttling\r\n *\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nfunction throttle(fn, limit) {\r\n    let inThrottle;\r\n    return function (...args) {\r\n        const self = this;\r\n        if (!inThrottle) {\r\n            fn.apply(self, args);\r\n            inThrottle = true;\r\n            setTimeout(() => (inThrottle = false), limit);\r\n        }\r\n    };\r\n}\r\nfunction getSlidesVNodes(vNode) {\r\n    var _a, _b, _c;\r\n    // Return empty array if there's any node\r\n    if (!vNode)\r\n        return [];\r\n    // Check if the Slides components are added directly without v-for (#72)\r\n    if (((_b = (_a = vNode[0]) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.name) === 'CarouselSlide')\r\n        return vNode;\r\n    return ((_c = vNode[0]) === null || _c === void 0 ? void 0 : _c.children) || [];\r\n}\r\nfunction getMaxSlideIndex(config, slidesCount) {\r\n    if (config.wrapAround) {\r\n        return slidesCount - 1;\r\n    }\r\n    switch (config.snapAlign) {\r\n        case 'start':\r\n            return slidesCount - config.itemsToShow;\r\n        case 'end':\r\n            return slidesCount - 1;\r\n        case 'center':\r\n        case 'center-odd':\r\n            return slidesCount - Math.ceil(config.itemsToShow / 2);\r\n        case 'center-even':\r\n            return slidesCount - Math.ceil(config.itemsToShow / 2);\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\nfunction getMinSlideIndex(config) {\r\n    if (config.wrapAround) {\r\n        return 0;\r\n    }\r\n    switch (config.snapAlign) {\r\n        case 'start':\r\n            return 0;\r\n        case 'end':\r\n            return config.itemsToShow - 1;\r\n        case 'center':\r\n        case 'center-odd':\r\n            return Math.floor((config.itemsToShow - 1) / 2);\r\n        case 'center-even':\r\n            return Math.floor((config.itemsToShow - 2) / 2);\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\nfunction getCurrentSlideIndex(config, val, max, min) {\r\n    if (config.wrapAround) {\r\n        return val;\r\n    }\r\n    return Math.min(Math.max(val, min), max);\r\n}\r\nfunction getSlidesToScroll({ slidesBuffer, currentSlide, snapAlign, itemsToShow, wrapAround, slidesCount, }) {\r\n    let output = slidesBuffer.indexOf(currentSlide);\r\n    if (output === -1) {\r\n        output = slidesBuffer.indexOf(Math.ceil(currentSlide));\r\n    }\r\n    if (snapAlign === 'center' || snapAlign === 'center-odd') {\r\n        output -= (itemsToShow - 1) / 2;\r\n    }\r\n    else if (snapAlign === 'center-even') {\r\n        output -= (itemsToShow - 2) / 2;\r\n    }\r\n    else if (snapAlign === 'end') {\r\n        output -= itemsToShow - 1;\r\n    }\r\n    if (!wrapAround) {\r\n        const max = slidesCount - itemsToShow;\r\n        const min = 0;\r\n        output = Math.max(Math.min(output, max), min);\r\n    }\r\n    return output;\r\n}\n\nvar Carousel = defineComponent({\r\n    name: 'Carousel',\r\n    props: {\r\n        // count of items to showed per view\r\n        itemsToShow: {\r\n            default: defaultConfigs.itemsToShow,\r\n            type: Number,\r\n        },\r\n        // count of items to be scrolled\r\n        itemsToScroll: {\r\n            default: defaultConfigs.itemsToScroll,\r\n            type: Number,\r\n        },\r\n        // control infinite scrolling mode\r\n        wrapAround: {\r\n            default: defaultConfigs.wrapAround,\r\n            type: Boolean,\r\n        },\r\n        // control snap position alignment\r\n        snapAlign: {\r\n            default: defaultConfigs.snapAlign,\r\n            validator(value) {\r\n                // The value must match one of these strings\r\n                return ['start', 'end', 'center', 'center-even', 'center-odd'].includes(value);\r\n            },\r\n        },\r\n        // sliding transition time in ms\r\n        transition: {\r\n            default: defaultConfigs.transition,\r\n            type: Number,\r\n        },\r\n        // an object to store breakpoints\r\n        breakpoints: {\r\n            default: defaultConfigs.breakpoints,\r\n            type: Object,\r\n        },\r\n        // time to auto advance slides in ms\r\n        autoplay: {\r\n            default: defaultConfigs.autoplay,\r\n            type: Number,\r\n        },\r\n        // pause autoplay when mouse hover over the carousel\r\n        pauseAutoplayOnHover: {\r\n            default: defaultConfigs.pauseAutoplayOnHover,\r\n            type: Boolean,\r\n        },\r\n        // slide number number of initial slide\r\n        modelValue: {\r\n            default: undefined,\r\n            type: Number,\r\n        },\r\n        // toggle mouse dragging.\r\n        mouseDrag: {\r\n            default: defaultConfigs.mouseDrag,\r\n            type: Boolean,\r\n        },\r\n        // toggle mouse dragging.\r\n        touchDrag: {\r\n            default: defaultConfigs.touchDrag,\r\n            type: Boolean,\r\n        },\r\n        // control snap position alignment\r\n        dir: {\r\n            default: defaultConfigs.dir,\r\n            validator(value) {\r\n                // The value must match one of these strings\r\n                return ['rtl', 'ltr'].includes(value);\r\n            },\r\n        },\r\n        // an object to pass all settings\r\n        settings: {\r\n            default() {\r\n                return {};\r\n            },\r\n            type: Object,\r\n        },\r\n    },\r\n    setup(props, { slots, emit, expose }) {\r\n        var _a;\r\n        const root = ref(null);\r\n        const slides = ref([]);\r\n        const slidesBuffer = ref([]);\r\n        const slideWidth = ref(0);\r\n        const slidesCount = ref(1);\r\n        const autoplayTimer = ref(null);\r\n        const transitionTimer = ref(null);\r\n        let breakpoints = ref({});\r\n        // generate carousel configs\r\n        let __defaultConfig = Object.assign({}, defaultConfigs);\r\n        // current config\r\n        const config = reactive(Object.assign({}, __defaultConfig));\r\n        // slides\r\n        const currentSlideIndex = ref((_a = config.modelValue) !== null && _a !== void 0 ? _a : 0);\r\n        const prevSlideIndex = ref(0);\r\n        const middleSlideIndex = ref(0);\r\n        const maxSlideIndex = ref(0);\r\n        const minSlideIndex = ref(0);\r\n        provide('config', config);\r\n        provide('slidesBuffer', slidesBuffer);\r\n        provide('slidesCount', slidesCount);\r\n        provide('currentSlide', currentSlideIndex);\r\n        provide('maxSlide', maxSlideIndex);\r\n        provide('minSlide', minSlideIndex);\r\n        /**\r\n         * Configs\r\n         */\r\n        function initDefaultConfigs() {\r\n            // generate carousel configs\r\n            const mergedConfigs = Object.assign(Object.assign({}, props), props.settings);\r\n            // Set breakpoints\r\n            breakpoints = ref(Object.assign({}, mergedConfigs.breakpoints));\r\n            // remove extra values\r\n            __defaultConfig = Object.assign(Object.assign({}, mergedConfigs), { settings: undefined, breakpoints: undefined });\r\n            bindConfigs(__defaultConfig);\r\n        }\r\n        function updateBreakpointsConfigs() {\r\n            const breakpointsArray = Object.keys(breakpoints.value)\r\n                .map((key) => Number(key))\r\n                .sort((a, b) => +b - +a);\r\n            let newConfig = Object.assign({}, __defaultConfig);\r\n            breakpointsArray.some((breakpoint) => {\r\n                const isMatched = window.matchMedia(`(min-width: ${breakpoint}px)`).matches;\r\n                if (isMatched) {\r\n                    newConfig = Object.assign(Object.assign({}, newConfig), breakpoints.value[breakpoint]);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            bindConfigs(newConfig);\r\n        }\r\n        function bindConfigs(newConfig) {\r\n            for (let key in newConfig) {\r\n                // @ts-ignore\r\n                config[key] = newConfig[key];\r\n            }\r\n        }\r\n        const handleWindowResize = debounce(() => {\r\n            if (breakpoints.value) {\r\n                updateBreakpointsConfigs();\r\n                updateSlidesData();\r\n            }\r\n            updateSlideWidth();\r\n        }, 16);\r\n        /**\r\n         * Setup functions\r\n         */\r\n        function updateSlideWidth() {\r\n            if (!root.value)\r\n                return;\r\n            const rect = root.value.getBoundingClientRect();\r\n            slideWidth.value = rect.width / config.itemsToShow;\r\n        }\r\n        function updateSlidesData() {\r\n            slidesCount.value = Math.max(slides.value.length, 1);\r\n            if (slidesCount.value <= 0)\r\n                return;\r\n            middleSlideIndex.value = Math.ceil((slidesCount.value - 1) / 2);\r\n            maxSlideIndex.value = getMaxSlideIndex(config, slidesCount.value);\r\n            minSlideIndex.value = getMinSlideIndex(config);\r\n            currentSlideIndex.value = getCurrentSlideIndex(config, currentSlideIndex.value, maxSlideIndex.value, minSlideIndex.value);\r\n        }\r\n        function updateSlidesBuffer() {\r\n            const slidesArray = [...Array(slidesCount.value).keys()];\r\n            const shouldShiftSlides = config.wrapAround && config.itemsToShow + 1 <= slidesCount.value;\r\n            if (shouldShiftSlides) {\r\n                const buffer = config.itemsToShow !== 1\r\n                    ? Math.round((slidesCount.value - config.itemsToShow) / 2)\r\n                    : 0;\r\n                let shifts = buffer - currentSlideIndex.value;\r\n                if (config.snapAlign === 'end') {\r\n                    shifts += Math.floor(config.itemsToShow - 1);\r\n                }\r\n                else if (config.snapAlign === 'center' || config.snapAlign === 'center-odd') {\r\n                    shifts++;\r\n                }\r\n                // Check shifting directions\r\n                if (shifts < 0) {\r\n                    for (let i = shifts; i < 0; i++) {\r\n                        slidesArray.push(Number(slidesArray.shift()));\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 0; i < shifts; i++) {\r\n                        slidesArray.unshift(Number(slidesArray.pop()));\r\n                    }\r\n                }\r\n            }\r\n            slidesBuffer.value = slidesArray;\r\n        }\r\n        onMounted(() => {\r\n            if (breakpoints.value) {\r\n                updateBreakpointsConfigs();\r\n                updateSlidesData();\r\n            }\r\n            nextTick(() => setTimeout(updateSlideWidth, 16));\r\n            if (config.autoplay && config.autoplay > 0) {\r\n                initializeAutoplay();\r\n            }\r\n            window.addEventListener('resize', handleWindowResize, { passive: true });\r\n        });\r\n        onUnmounted(() => {\r\n            if (transitionTimer.value) {\r\n                clearTimeout(transitionTimer.value);\r\n            }\r\n            resetAutoplayTimer(false);\r\n        });\r\n        /**\r\n         * Carousel Event listeners\r\n         */\r\n        let isTouch = false;\r\n        const startPosition = { x: 0, y: 0 };\r\n        const endPosition = { x: 0, y: 0 };\r\n        const dragged = reactive({ x: 0, y: 0 });\r\n        const isDragging = ref(false);\r\n        const isHover = ref(false);\r\n        const handleMouseEnter = () => {\r\n            isHover.value = true;\r\n        };\r\n        const handleMouseLeave = () => {\r\n            isHover.value = false;\r\n        };\r\n        const handleDrag = throttle((event) => {\r\n            if (!isTouch)\r\n                event.preventDefault();\r\n            endPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\r\n            endPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\r\n            const deltaX = endPosition.x - startPosition.x;\r\n            const deltaY = endPosition.y - startPosition.y;\r\n            dragged.y = deltaY;\r\n            dragged.x = deltaX;\r\n        }, 16);\r\n        function handleDragStart(event) {\r\n            isTouch = event.type === 'touchstart';\r\n            if (!isTouch)\r\n                event.preventDefault();\r\n            if ((!isTouch && event.button !== 0) || isSliding.value) {\r\n                return;\r\n            }\r\n            isDragging.value = true;\r\n            startPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\r\n            startPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\r\n            document.addEventListener(isTouch ? 'touchmove' : 'mousemove', handleDrag);\r\n            document.addEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd);\r\n        }\r\n        function handleDragEnd() {\r\n            isDragging.value = false;\r\n            const direction = config.dir === 'rtl' ? -1 : 1;\r\n            const tolerance = Math.sign(dragged.x) * 0.4;\r\n            const draggedSlides = Math.round(dragged.x / slideWidth.value + tolerance) * direction;\r\n            let newSlide = getCurrentSlideIndex(config, currentSlideIndex.value - draggedSlides, maxSlideIndex.value, minSlideIndex.value);\r\n            slideTo(newSlide);\r\n            dragged.x = 0;\r\n            dragged.y = 0;\r\n            document.removeEventListener(isTouch ? 'touchmove' : 'mousemove', handleDrag);\r\n            document.removeEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd);\r\n        }\r\n        /**\r\n         * Autoplay\r\n         */\r\n        function initializeAutoplay() {\r\n            autoplayTimer.value = setInterval(() => {\r\n                if (config.pauseAutoplayOnHover && isHover.value) {\r\n                    return;\r\n                }\r\n                next();\r\n            }, config.autoplay);\r\n        }\r\n        function resetAutoplayTimer(restart = true) {\r\n            if (!autoplayTimer.value) {\r\n                return;\r\n            }\r\n            clearInterval(autoplayTimer.value);\r\n            if (restart) {\r\n                initializeAutoplay();\r\n            }\r\n        }\r\n        /**\r\n         * Navigation function\r\n         */\r\n        const isSliding = ref(false);\r\n        function slideTo(slideIndex, mute = false) {\r\n            resetAutoplayTimer();\r\n            if (currentSlideIndex.value === slideIndex || isSliding.value) {\r\n                return;\r\n            }\r\n            // Wrap slide index\r\n            const lastSlideIndex = slidesCount.value - 1;\r\n            if (slideIndex > lastSlideIndex) {\r\n                return slideTo(slideIndex - slidesCount.value);\r\n            }\r\n            if (slideIndex < 0) {\r\n                return slideTo(slideIndex + slidesCount.value);\r\n            }\r\n            isSliding.value = true;\r\n            prevSlideIndex.value = currentSlideIndex.value;\r\n            currentSlideIndex.value = slideIndex;\r\n            if (!mute) {\r\n                emit('update:modelValue', currentSlideIndex.value);\r\n            }\r\n            transitionTimer.value = setTimeout(() => {\r\n                if (config.wrapAround)\r\n                    updateSlidesBuffer();\r\n                isSliding.value = false;\r\n            }, config.transition);\r\n        }\r\n        function next() {\r\n            let nextSlide = currentSlideIndex.value + config.itemsToScroll;\r\n            if (!config.wrapAround) {\r\n                nextSlide = Math.min(nextSlide, maxSlideIndex.value);\r\n            }\r\n            slideTo(nextSlide);\r\n        }\r\n        function prev() {\r\n            let prevSlide = currentSlideIndex.value - config.itemsToScroll;\r\n            if (!config.wrapAround) {\r\n                prevSlide = Math.max(prevSlide, minSlideIndex.value);\r\n            }\r\n            slideTo(prevSlide);\r\n        }\r\n        const nav = { slideTo, next, prev };\r\n        provide('nav', nav);\r\n        /**\r\n         * Track style\r\n         */\r\n        const slidesToScroll = computed(() => getSlidesToScroll({\r\n            slidesBuffer: slidesBuffer.value,\r\n            itemsToShow: config.itemsToShow,\r\n            snapAlign: config.snapAlign,\r\n            wrapAround: Boolean(config.wrapAround),\r\n            currentSlide: currentSlideIndex.value,\r\n            slidesCount: slidesCount.value,\r\n        }));\r\n        provide('slidesToScroll', slidesToScroll);\r\n        const trackStyle = computed(() => {\r\n            const direction = config.dir === 'rtl' ? -1 : 1;\r\n            const xScroll = slidesToScroll.value * slideWidth.value * direction;\r\n            return {\r\n                transform: `translateX(${dragged.x - xScroll}px)`,\r\n                transition: `${isSliding.value ? config.transition : 0}ms`,\r\n            };\r\n        });\r\n        function initCarousel() {\r\n            initDefaultConfigs();\r\n        }\r\n        function restartCarousel() {\r\n            initDefaultConfigs();\r\n            updateBreakpointsConfigs();\r\n            updateSlidesData();\r\n            updateSlidesBuffer();\r\n            updateSlideWidth();\r\n        }\r\n        function updateCarousel() {\r\n            updateSlidesData();\r\n            updateSlidesBuffer();\r\n        }\r\n        // Update the carousel on props change\r\n        watch(() => Object.values(props), restartCarousel);\r\n        // Init carousel\r\n        initCarousel();\r\n        watchEffect(() => {\r\n            // Handel when slides added/removed\r\n            const needToUpdate = slidesCount.value !== slides.value.length;\r\n            const currentSlideUpdated = props.modelValue !== undefined && currentSlideIndex.value !== props.modelValue;\r\n            if (currentSlideUpdated) {\r\n                slideTo(Number(props.modelValue), true);\r\n            }\r\n            if (needToUpdate) {\r\n                updateCarousel();\r\n            }\r\n        });\r\n        const data = {\r\n            config,\r\n            slidesBuffer,\r\n            slidesCount,\r\n            slideWidth,\r\n            currentSlide: currentSlideIndex,\r\n            maxSlide: maxSlideIndex,\r\n            minSlide: minSlideIndex,\r\n            middleSlide: middleSlideIndex,\r\n        };\r\n        expose({\r\n            updateBreakpointsConfigs,\r\n            updateSlidesData,\r\n            updateSlideWidth,\r\n            updateSlidesBuffer,\r\n            initCarousel,\r\n            restartCarousel,\r\n            updateCarousel,\r\n            slideTo,\r\n            next,\r\n            prev,\r\n            nav,\r\n            data,\r\n        });\r\n        const slotSlides = slots.default || slots.slides;\r\n        const slotAddons = slots.addons;\r\n        const slotsProps = reactive(data);\r\n        return () => {\r\n            const slidesElements = getSlidesVNodes(slotSlides === null || slotSlides === void 0 ? void 0 : slotSlides(slotsProps));\r\n            const addonsElements = (slotAddons === null || slotAddons === void 0 ? void 0 : slotAddons(slotsProps)) || [];\r\n            slides.value = slidesElements;\r\n            // Bind slide order\r\n            slidesElements.forEach((el, index) => (el.props.index = index));\r\n            const trackEl = h('ol', {\r\n                class: 'carousel__track',\r\n                style: trackStyle.value,\r\n                onMousedown: config.mouseDrag ? handleDragStart : null,\r\n                onTouchstart: config.touchDrag ? handleDragStart : null,\r\n            }, slidesElements);\r\n            const viewPortEl = h('div', { class: 'carousel__viewport' }, trackEl);\r\n            return h('section', {\r\n                ref: root,\r\n                class: {\r\n                    carousel: true,\r\n                    'carousel--rtl': config.dir === 'rtl',\r\n                },\r\n                dir: config.dir,\r\n                'aria-label': 'Gallery',\r\n                onMouseenter: handleMouseEnter,\r\n                onMouseleave: handleMouseLeave,\r\n            }, [viewPortEl, addonsElements]);\r\n        };\r\n    },\r\n});\n\nconst icons = {\r\n    arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\r\n    arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\r\n    arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\r\n    arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\r\n};\n\nconst Icon = (props) => {\r\n    const iconName = props.name;\r\n    if (!iconName || typeof iconName !== 'string') {\r\n        return;\r\n    }\r\n    const path = icons[iconName];\r\n    const pathEl = h('path', { d: path });\r\n    const iconTitle = props.title || iconName;\r\n    const titleEl = h('title', null, iconName);\r\n    return h('svg', {\r\n        class: 'carousel__icon',\r\n        viewBox: '0 0 24 24',\r\n        role: 'img',\r\n        ariaLabel: iconTitle,\r\n    }, [titleEl, pathEl]);\r\n};\r\nIcon.props = { name: String, title: String };\n\nconst Navigation = (props, { slots, attrs }) => {\r\n    const { next: slotNext, prev: slotPrev } = slots;\r\n    const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\r\n    const maxSlide = inject('maxSlide', ref(1));\r\n    const minSlide = inject('minSlide', ref(1));\r\n    const currentSlide = inject('currentSlide', ref(1));\r\n    const nav = inject('nav', {});\r\n    const isRTL = config.dir === 'rtl';\r\n    const prevButton = h('button', {\r\n        type: 'button',\r\n        class: [\r\n            'carousel__prev',\r\n            !config.wrapAround &&\r\n                currentSlide.value <= minSlide.value &&\r\n                'carousel__prev--in-active',\r\n            attrs === null || attrs === void 0 ? void 0 : attrs.class,\r\n        ],\r\n        'aria-label': `Navigate to previous slide`,\r\n        onClick: nav.prev,\r\n    }, (slotPrev === null || slotPrev === void 0 ? void 0 : slotPrev()) || h(Icon, { name: isRTL ? 'arrowRight' : 'arrowLeft' }));\r\n    const nextButton = h('button', {\r\n        type: 'button',\r\n        class: [\r\n            'carousel__next',\r\n            !config.wrapAround &&\r\n                currentSlide.value >= maxSlide.value &&\r\n                'carousel__next--in-active',\r\n            attrs === null || attrs === void 0 ? void 0 : attrs.class,\r\n        ],\r\n        'aria-label': `Navigate to next slide`,\r\n        onClick: nav.next,\r\n    }, (slotNext === null || slotNext === void 0 ? void 0 : slotNext()) || h(Icon, { name: isRTL ? 'arrowLeft' : 'arrowRight' }));\r\n    return [prevButton, nextButton];\r\n};\n\nvar Slide = defineComponent({\r\n    name: 'CarouselSlide',\r\n    props: {\r\n        index: {\r\n            type: Number,\r\n            default: 1,\r\n        },\r\n    },\r\n    setup(props, { slots }) {\r\n        const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\r\n        const slidesBuffer = inject('slidesBuffer', ref([]));\r\n        const currentSlide = inject('currentSlide', ref(0));\r\n        const slidesToScroll = inject('slidesToScroll', ref(0));\r\n        const wrapOrder = ref(props.index);\r\n        if (config.wrapAround) {\r\n            updateOrder();\r\n            watch(slidesBuffer, updateOrder);\r\n        }\r\n        function updateOrder() {\r\n            wrapOrder.value = slidesBuffer.value.indexOf(props.index);\r\n        }\r\n        const slideStyle = computed(() => {\r\n            const items = config.itemsToShow;\r\n            const width = `${(1 / items) * 100}%`;\r\n            return {\r\n                width,\r\n                order: wrapOrder.value.toString(),\r\n            };\r\n        });\r\n        const isActive = () => props.index === currentSlide.value;\r\n        const isVisible = () => {\r\n            const min = Math.ceil(slidesToScroll.value);\r\n            const max = Math.floor(slidesToScroll.value + config.itemsToShow);\r\n            const current = slidesBuffer.value.slice(min, max);\r\n            return current.includes(props.index);\r\n        };\r\n        const isPrev = () => props.index === slidesBuffer.value[Math.ceil(slidesToScroll.value) - 1];\r\n        const isNext = () => props.index ===\r\n            slidesBuffer.value[Math.floor(slidesToScroll.value + config.itemsToShow)];\r\n        return () => {\r\n            var _a;\r\n            return h('li', {\r\n                style: slideStyle.value,\r\n                class: {\r\n                    carousel__slide: true,\r\n                    'carousel__slide--active': isActive(),\r\n                    'carousel__slide--visible': isVisible(),\r\n                    'carousel__slide--prev': isPrev(),\r\n                    'carousel__slide--next': isNext(),\r\n                },\r\n            }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));\r\n        };\r\n    },\r\n});\n\nconst Pagination = () => {\r\n    const maxSlide = inject('maxSlide', ref(1));\r\n    const minSlide = inject('minSlide', ref(1));\r\n    const currentSlide = inject('currentSlide', ref(1));\r\n    const nav = inject('nav', {});\r\n    function handleButtonClick(slideNumber) {\r\n        nav.slideTo(slideNumber);\r\n    }\r\n    const isActive = (slide) => {\r\n        const val = currentSlide.value;\r\n        return (val === slide ||\r\n            (val > maxSlide.value && slide >= maxSlide.value) ||\r\n            (val < minSlide.value && slide <= minSlide.value));\r\n    };\r\n    const children = [];\r\n    for (let slide = minSlide.value; slide < maxSlide.value + 1; slide++) {\r\n        const button = h('button', {\r\n            type: 'button',\r\n            class: {\r\n                'carousel__pagination-button': true,\r\n                'carousel__pagination-button--active': isActive(slide),\r\n            },\r\n            'aria-label': `Navigate to slide ${slide + 1}`,\r\n            onClick: () => handleButtonClick(slide),\r\n        });\r\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button);\r\n        children.push(item);\r\n    }\r\n    return h('ol', { class: 'carousel__pagination' }, children);\r\n};\n\nexport { Carousel, Icon, Navigation, Pagination, Slide };\n","<template>\n  <div class=\"w-full h-full rounded-md animate-pulse bg-gray\" />\n</template>\n\n<script>\nexport default {\n  name: 'Skeleton'\n};\n</script>\n","import { render } from \"./Skeleton.vue?vue&type=template&id=5bdebe1d\"\nimport script from \"./Skeleton.vue?vue&type=script&lang=js\"\nexport * from \"./Skeleton.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Applications/MAMP/htdocs/for_life/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default function (Component) {\n  Component.__i18n = Component.__i18n || []\n  Component.__i18n.push({\n    \"locale\": \"\",\n    \"resource\": {\n      \"ua\": {\n        \"documents\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Документи\"])}\n      },\n      \"en\": {\n        \"documents\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Documents\"])}\n      }\n    }\n  })\n}\n","import { render } from \"./Documents.vue?vue&type=template&id=2977283d\"\nimport script from \"./Documents.vue?vue&type=script&lang=js\"\nexport * from \"./Documents.vue?vue&type=script&lang=js\"\n/* custom blocks */\nimport block0 from \"./Documents.vue?vue&type=custom&index=0&blockType=i18n\"\nif (typeof block0 === 'function') block0(script)\n\n\nimport exportComponent from \"/Applications/MAMP/htdocs/for_life/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <section>\n    <Subtitle :title=\"$t('title')\" />\n\n    <!-- Mob -->\n    <div class=\"flex mt-4 gap-3 flex-col sm:hidden\">\n      <BtnPrimary\n        class=\"lg:text-4xl !h-17 border border-primary bg-white text-primary hover:bg-white hover:border-primary-hover hover:text-primary-hover\"\n        :title=\"$t('get_help')\"\n        @click=\"showGetHelpModal\"\n      />\n      \n      <BtnPrimary\n        class=\"lg:text-4xl !h-17\"\n        :title=\"$t('want_help')\"\n      />\n    </div>\n    <!-- Mob -->\n\n\n    <!-- Desktop -->\n    <BlockLayout class=\"hidden sm:flex\">\n      <BtnPrimary\n        class=\"lg:text-4xl !h-17\"\n        :title=\"$t('want_help')\"\n      />\n\n      <BtnPrimary\n        class=\"lg:text-4xl !h-17\"\n        :title=\"$t('get_help')\"\n        @click=\"showGetHelpModal\"\n      />\n    </BlockLayout>\n    <!-- Desktop -->\n  </section>\n</template>\n\n<script>\nimport BlockLayout from './BlockLayout';\nimport Subtitle from '../ui/Subtitle';\nimport BtnPrimary from '../ui/BtnPrimary';\nexport default { \n  name: 'HelpSection',\n  components: {\n    BtnPrimary,\n    Subtitle,\n    BlockLayout\n  },\n  methods: {\n    showGetHelpModal () {\n      this.emitter.emit('show-get-help-modal');\n    }\n  }\n};\n</script>\n\n<i18n>\n{\n  \"ua\": {\n    \"title\": \"Благородно тільки те, що безкорисливо\"\n  },\n  \"en\": {\n    \"title\": \"Noble only that which is selfless\"\n  }\n}\n</i18n>\n","export default function (Component) {\n  Component.__i18n = Component.__i18n || []\n  Component.__i18n.push({\n    \"locale\": \"\",\n    \"resource\": {\n      \"ua\": {\n        \"title\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Благородно тільки те, що безкорисливо\"])}\n      },\n      \"en\": {\n        \"title\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Noble only that which is selfless\"])}\n      }\n    }\n  })\n}\n","import { render } from \"./HelpSection.vue?vue&type=template&id=8a5e7ab6\"\nimport script from \"./HelpSection.vue?vue&type=script&lang=js\"\nexport * from \"./HelpSection.vue?vue&type=script&lang=js\"\n/* custom blocks */\nimport block0 from \"./HelpSection.vue?vue&type=custom&index=0&blockType=i18n\"\nif (typeof block0 === 'function') block0(script)\n\n\nimport exportComponent from \"/Applications/MAMP/htdocs/for_life/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default function (Component) {\n  Component.__i18n = Component.__i18n || []\n  Component.__i18n.push({\n    \"locale\": \"\",\n    \"resource\": {\n      \"ua\": {\n        \"volunteer_team\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Волонтерьска спільнота\"])},\n        \"main_text\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolorin reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt inculpa qui officia deserunt mollit anim id est laborum.\"])},\n        \"reports\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Звіти\"])},\n        \"reports_text\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Ми активно ведемо наш телеграм канал для того, щоб ви могли стежити за роботою нашого фонду\"])}\n      },\n      \"en\": {\n        \"volunteer_team\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Volunteer community\"])},\n        \"main_text\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolorin reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt inculpa qui officia deserunt mollit anim id est laborum.\"])},\n        \"reports\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"Reports\"])},\n        \"reports_text\": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([\"We are actively running our telegram channel so that you can follow the work of our fund\"])}\n      }\n    }\n  })\n}\n","import { render } from \"./Home.vue?vue&type=template&id=20d2e52b\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n/* custom blocks */\nimport block0 from \"./Home.vue?vue&type=custom&index=0&blockType=i18n\"\nif (typeof block0 === 'function') block0(script)\n\n\nimport exportComponent from \"/Applications/MAMP/htdocs/for_life/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","module.exports = __webpack_public_path__ + \"img/doc.24558b65.jpeg\";"],"sourceRoot":""}